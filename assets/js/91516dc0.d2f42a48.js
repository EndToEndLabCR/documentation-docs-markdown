"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[7108],{5723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"tech-stack/frontend/react/state-management","title":"State Management in React","description":"This file covers different approaches to managing state in React applications.","source":"@site/docs/tech-stack/frontend/react/state-management.md","sourceDirName":"tech-stack/frontend/react","slug":"/tech-stack/frontend/react/state-management","permalink":"/documentation-docs-markdown/docs/tech-stack/frontend/react/state-management","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/tech-stack/frontend/react/state-management.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"React Component Structure","permalink":"/documentation-docs-markdown/docs/tech-stack/frontend/react/component-structure"},"next":{"title":"Testing React Applications","permalink":"/documentation-docs-markdown/docs/tech-stack/frontend/react/testing-react"}}');var c=n(4848),s=n(8453);const o={},r="State Management in React",i={},l=[{value:"Local State (useState)",id:"local-state-usestate",level:2},{value:"Context API",id:"context-api",level:2},{value:"Redux Toolkit (Complex State)",id:"redux-toolkit-complex-state",level:2},{value:"State Management Guidelines",id:"state-management-guidelines",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"state-management-in-react",children:"State Management in React"})}),"\n",(0,c.jsx)(t.p,{children:"This file covers different approaches to managing state in React applications."}),"\n",(0,c.jsx)(t.h2,{id:"local-state-usestate",children:"Local State (useState)"}),"\n",(0,c.jsx)(t.p,{children:"For simple, component-specific state:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-jsx",children:"import React, { useState } from 'react';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>\n        Increment\n      </button>\n    </div>\n  );\n};\n"})}),"\n",(0,c.jsx)(t.h2,{id:"context-api",children:"Context API"}),"\n",(0,c.jsx)(t.p,{children:"For sharing state across components:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-jsx",children:"import React, { createContext, useContext, useReducer } from 'react';\n\nconst AuthContext = createContext();\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state, user: action.payload, isAuthenticated: true };\n    case 'LOGOUT':\n      return { ...state, user: null, isAuthenticated: false };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null,\n    isAuthenticated: false\n  });\n\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"})}),"\n",(0,c.jsx)(t.h2,{id:"redux-toolkit-complex-state",children:"Redux Toolkit (Complex State)"}),"\n",(0,c.jsx)(t.p,{children:"For large applications with complex state:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-jsx",children:"import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: { value: 0 },\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    }\n  }\n});\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\n"})}),"\n",(0,c.jsx)(t.h2,{id:"state-management-guidelines",children:"State Management Guidelines"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Start with local state"}),"\n",(0,c.jsx)(t.li,{children:"Use Context for medium complexity"}),"\n",(0,c.jsx)(t.li,{children:"Consider Redux for complex applications"}),"\n",(0,c.jsx)(t.li,{children:"Keep state as flat as possible"}),"\n",(0,c.jsx)(t.li,{children:"Normalize complex data structures"}),"\n",(0,c.jsx)(t.li,{children:"Use selectors to compute derived state"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var a=n(6540);const c={},s=a.createContext(c);function o(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);