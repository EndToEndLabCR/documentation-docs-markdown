"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[598],{639:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"faq-and-troubleshooting/common-errors","title":"Common Errors","description":"This file documents common errors encountered during development and their solutions.","source":"@site/docs/faq-and-troubleshooting/common-errors.md","sourceDirName":"faq-and-troubleshooting","slug":"/faq-and-troubleshooting/common-errors","permalink":"/documentation-docs-markdown/docs/faq-and-troubleshooting/common-errors","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/faq-and-troubleshooting/common-errors.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CI/CD Issues","permalink":"/documentation-docs-markdown/docs/faq-and-troubleshooting/ci-cd-issues"},"next":{"title":"Git Conflicts","permalink":"/documentation-docs-markdown/docs/faq-and-troubleshooting/git-conflicts"}}');var o=r(4848),i=r(8453);const t={},a="Common Errors",l={},c=[{value:"Build and Compilation Errors",id:"build-and-compilation-errors",level:2},{value:"Node.js / npm Errors",id:"nodejs--npm-errors",level:3},{value:"Error: Module not found",id:"error-module-not-found",level:4},{value:"Error: Permission denied (EACCES)",id:"error-permission-denied-eacces",level:4},{value:"Error: Heap out of memory",id:"error-heap-out-of-memory",level:4},{value:"Python Errors",id:"python-errors",level:3},{value:"ImportError: No module named &#39;package&#39;",id:"importerror-no-module-named-package",level:4},{value:"SyntaxError: invalid syntax",id:"syntaxerror-invalid-syntax",level:4},{value:"ModuleNotFoundError with relative imports",id:"modulenotfounderror-with-relative-imports",level:4},{value:"Java Errors",id:"java-errors",level:3},{value:"ClassNotFoundException",id:"classnotfoundexception",level:4},{value:"OutOfMemoryError",id:"outofmemoryerror",level:4},{value:"NoSuchMethodError",id:"nosuchmethoderror",level:4},{value:"Database Errors",id:"database-errors",level:2},{value:"PostgreSQL Errors",id:"postgresql-errors",level:3},{value:"Connection refused",id:"connection-refused",level:4},{value:"Authentication failed",id:"authentication-failed",level:4},{value:"Database does not exist",id:"database-does-not-exist",level:4},{value:"MongoDB Errors",id:"mongodb-errors",level:3},{value:"Connection timeout",id:"connection-timeout",level:4},{value:"Authentication failed",id:"authentication-failed-1",level:4},{value:"Docker Errors",id:"docker-errors",level:2},{value:"Image build failures",id:"image-build-failures",level:3},{value:"Error: failed to solve with frontend dockerfile.v0",id:"error-failed-to-solve-with-frontend-dockerfilev0",level:4},{value:"Error: Cannot connect to the Docker daemon",id:"error-cannot-connect-to-the-docker-daemon",level:4},{value:"Container runtime errors",id:"container-runtime-errors",level:3},{value:"Port already in use",id:"port-already-in-use",level:4},{value:"Container exits immediately",id:"container-exits-immediately",level:4},{value:"API and Network Errors",id:"api-and-network-errors",level:2},{value:"HTTP Status Code Errors",id:"http-status-code-errors",level:3},{value:"400 Bad Request",id:"400-bad-request",level:4},{value:"401 Unauthorized",id:"401-unauthorized",level:4},{value:"404 Not Found",id:"404-not-found",level:4},{value:"500 Internal Server Error",id:"500-internal-server-error",level:4},{value:"CORS Errors",id:"cors-errors",level:3},{value:"Access-Control-Allow-Origin",id:"access-control-allow-origin",level:4},{value:"Git Errors",id:"git-errors",level:2},{value:"Common Git Issues",id:"common-git-issues",level:3},{value:"fatal: not a git repository",id:"fatal-not-a-git-repository",level:4},{value:"fatal: remote origin already exists",id:"fatal-remote-origin-already-exists",level:4},{value:"Your branch is ahead of &#39;origin/main&#39;",id:"your-branch-is-ahead-of-originmain",level:4},{value:"Merge conflicts",id:"merge-conflicts",level:4},{value:"Environment-Specific Errors",id:"environment-specific-errors",level:2},{value:"Development Environment",id:"development-environment",level:3},{value:"Port conflicts",id:"port-conflicts",level:4},{value:"Environment variables not loaded",id:"environment-variables-not-loaded",level:4},{value:"Production Environment",id:"production-environment",level:3},{value:"Memory leaks",id:"memory-leaks",level:4},{value:"SSL certificate errors",id:"ssl-certificate-errors",level:4},{value:"Performance Issues",id:"performance-issues",level:2},{value:"Slow Database Queries",id:"slow-database-queries",level:3},{value:"High Memory Usage",id:"high-memory-usage",level:3},{value:"High CPU Usage",id:"high-cpu-usage",level:3},{value:"Getting Help",id:"getting-help",level:2},{value:"When to Escalate",id:"when-to-escalate",level:3},{value:"Debugging Information to Gather",id:"debugging-information-to-gather",level:3},{value:"Useful Commands for Information Gathering",id:"useful-commands-for-information-gathering",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"common-errors",children:"Common Errors"})}),"\n",(0,o.jsx)(n.p,{children:"This file documents common errors encountered during development and their solutions."}),"\n",(0,o.jsx)(n.h2,{id:"build-and-compilation-errors",children:"Build and Compilation Errors"}),"\n",(0,o.jsx)(n.h3,{id:"nodejs--npm-errors",children:"Node.js / npm Errors"}),"\n",(0,o.jsx)(n.h4,{id:"error-module-not-found",children:"Error: Module not found"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Error: Cannot find module 'some-package'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Clear npm cache\nnpm cache clean --force\n\n# Delete node_modules and reinstall\nrm -rf node_modules package-lock.json\nnpm install\n\n# Install missing package\nnpm install some-package\n\n# Check if package is listed in package.json\nnpm list some-package\n"})}),"\n",(0,o.jsx)(n.h4,{id:"error-permission-denied-eacces",children:"Error: Permission denied (EACCES)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Error: EACCES: permission denied, mkdir '/usr/local/lib/node_modules'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Fix npm permissions (recommended)\nmkdir ~/.npm-global\nnpm config set prefix '~/.npm-global'\necho 'export PATH=~/.npm-global/bin:$PATH' >> ~/.bashrc\nsource ~/.bashrc\n\n# Alternative: Use nvm (Node Version Manager)\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\nnvm install node\n"})}),"\n",(0,o.jsx)(n.h4,{id:"error-heap-out-of-memory",children:"Error: Heap out of memory"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"FATAL ERROR: Ineffective mark-compacts near heap limit\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Increase Node.js memory limit\nnode --max-old-space-size=4096 your-script.js\n\n# Or set environment variable\nexport NODE_OPTIONS="--max-old-space-size=4096"\n\n# For npm scripts, update package.json\n"scripts": {\n  "build": "node --max-old-space-size=4096 ./build.js"\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"python-errors",children:"Python Errors"}),"\n",(0,o.jsx)(n.h4,{id:"importerror-no-module-named-package",children:"ImportError: No module named 'package'"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"ImportError: No module named 'requests'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Install missing package\npip install requests\n\n# Check if virtual environment is activated\nwhich python\nsource venv/bin/activate  # Activate if needed\n\n# Install from requirements.txt\npip install -r requirements.txt\n\n# Check installed packages\npip list\npip show requests\n"})}),"\n",(0,o.jsx)(n.h4,{id:"syntaxerror-invalid-syntax",children:"SyntaxError: invalid syntax"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"SyntaxError: invalid syntax\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Common Causes and Solutions:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Python version mismatch"}),": Check ",(0,o.jsx)(n.code,{children:"python --version"}),", use correct version"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Indentation errors"}),": Use consistent spaces or tabs (prefer 4 spaces)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Missing parentheses"}),": f-strings require Python 3.6+"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Encoding issues"}),": Add ",(0,o.jsx)(n.code,{children:"# -*- coding: utf-8 -*-"})," at file top"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"modulenotfounderror-with-relative-imports",children:"ModuleNotFoundError with relative imports"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"ModuleNotFoundError: No module named 'mymodule'\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Run as module instead of script\npython -m mypackage.myscript\n\n# Add to PYTHONPATH\nexport PYTHONPATH="${PYTHONPATH}:/path/to/your/project"\n\n# Use absolute imports in your code\nfrom mypackage.mymodule import MyClass\n'})}),"\n",(0,o.jsx)(n.h3,{id:"java-errors",children:"Java Errors"}),"\n",(0,o.jsx)(n.h4,{id:"classnotfoundexception",children:"ClassNotFoundException"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'Exception in thread "main" java.lang.ClassNotFoundException: com.example.MyClass\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check classpath\njava -cp "/path/to/classes:/path/to/libs/*" com.example.MyClass\n\n# Verify package structure matches directory structure\n# com.example.MyClass should be in com/example/MyClass.java\n\n# Clean and rebuild\nmvn clean compile\n./gradlew clean build\n'})}),"\n",(0,o.jsx)(n.h4,{id:"outofmemoryerror",children:"OutOfMemoryError"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'Exception in thread "main" java.lang.OutOfMemoryError: Java heap space\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Increase heap size\njava -Xmx2g -Xms1g MyApplication\n\n# For Maven\nexport MAVEN_OPTS="-Xmx2g -Xms1g"\n\n# For Gradle\nexport GRADLE_OPTS="-Xmx2g -Xms1g"\n\n# In IDE, update run configuration VM options\n-Xmx2g -Xms1g\n'})}),"\n",(0,o.jsx)(n.h4,{id:"nosuchmethoderror",children:"NoSuchMethodError"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'Exception in thread "main" java.lang.NoSuchMethodError\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Check dependency versions for conflicts"}),"\n",(0,o.jsx)(n.li,{children:"Update/downgrade conflicting libraries"}),"\n",(0,o.jsx)(n.li,{children:"Clear compilation cache and rebuild"}),"\n",(0,o.jsx)(n.li,{children:"Verify method signatures match between versions"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"database-errors",children:"Database Errors"}),"\n",(0,o.jsx)(n.h3,{id:"postgresql-errors",children:"PostgreSQL Errors"}),"\n",(0,o.jsx)(n.h4,{id:"connection-refused",children:"Connection refused"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"psql: could not connect to server: Connection refused\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check if PostgreSQL is running\n# macOS\nbrew services list | grep postgresql\nbrew services start postgresql\n\n# Linux\nsudo systemctl status postgresql\nsudo systemctl start postgresql\n\n# Check port and host\npsql -h localhost -p 5432 -U username -d database\n\n# Check pg_hba.conf for authentication settings\nsudo nano /etc/postgresql/14/main/pg_hba.conf\n"})}),"\n",(0,o.jsx)(n.h4,{id:"authentication-failed",children:"Authentication failed"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'psql: FATAL: password authentication failed for user "username"\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Reset password\nsudo -u postgres psql\nALTER USER username PASSWORD 'newpassword';\n\n# Check pg_hba.conf authentication method\n# Change 'md5' to 'trust' temporarily for testing\n\n# Use correct connection string\npostgresql://username:password@localhost:5432/database\n"})}),"\n",(0,o.jsx)(n.h4,{id:"database-does-not-exist",children:"Database does not exist"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'psql: FATAL: database "mydb" does not exist\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# List databases\npsql -U postgres -l\n\n# Create database\ncreatedb mydb\n# or\npsql -U postgres -c "CREATE DATABASE mydb;"\n\n# Connect to existing database first\npsql -U postgres -d postgres -c "CREATE DATABASE mydb;"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"mongodb-errors",children:"MongoDB Errors"}),"\n",(0,o.jsx)(n.h4,{id:"connection-timeout",children:"Connection timeout"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pymongo.errors.ServerSelectionTimeoutError: No servers found yet\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check MongoDB service\n# macOS\nbrew services start mongodb-community\n\n# Linux\nsudo systemctl start mongod\n\n# Check connection string\nmongodb://localhost:27017/mydatabase\n\n# Verify network connectivity\ntelnet localhost 27017\n"})}),"\n",(0,o.jsx)(n.h4,{id:"authentication-failed-1",children:"Authentication failed"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pymongo.errors.OperationFailure: Authentication failed\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'// Create user with proper roles\nuse admin\ndb.createUser({\n  user: "myuser",\n  pwd: "mypassword",\n  roles: ["readWriteAnyDatabase"]\n})\n\n// Use correct connection string\nmongodb://myuser:mypassword@localhost:27017/mydatabase?authSource=admin\n'})}),"\n",(0,o.jsx)(n.h2,{id:"docker-errors",children:"Docker Errors"}),"\n",(0,o.jsx)(n.h3,{id:"image-build-failures",children:"Image build failures"}),"\n",(0,o.jsx)(n.h4,{id:"error-failed-to-solve-with-frontend-dockerfilev0",children:"Error: failed to solve with frontend dockerfile.v0"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Error: failed to solve with frontend dockerfile.v0\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check Dockerfile syntax\ndocker build --no-cache -t myapp .\n\n# Verify base image exists\ndocker pull node:18-alpine\n\n# Check file paths in COPY instructions\nCOPY package*.json ./\nCOPY . .\n\n# Use .dockerignore to exclude unnecessary files\necho "node_modules" >> .dockerignore\necho ".git" >> .dockerignore\n'})}),"\n",(0,o.jsx)(n.h4,{id:"error-cannot-connect-to-the-docker-daemon",children:"Error: Cannot connect to the Docker daemon"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Error: Cannot connect to the Docker daemon at unix:///var/run/docker.sock\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Start Docker service\n# macOS: Start Docker Desktop\n# Linux\nsudo systemctl start docker\n\n# Add user to docker group (Linux)\nsudo usermod -aG docker $USER\n# Log out and log back in\n\n# Check Docker daemon status\nsudo systemctl status docker\ndocker version\n"})}),"\n",(0,o.jsx)(n.h3,{id:"container-runtime-errors",children:"Container runtime errors"}),"\n",(0,o.jsx)(n.h4,{id:"port-already-in-use",children:"Port already in use"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Error: bind: address already in use\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Find process using the port\nlsof -i :8080\nnetstat -tulpn | grep :8080\n\n# Kill the process\nkill -9 <PID>\n\n# Use different port\ndocker run -p 8081:8080 myapp\n\n# Stop conflicting container\ndocker ps\ndocker stop container_name\n"})}),"\n",(0,o.jsx)(n.h4,{id:"container-exits-immediately",children:"Container exits immediately"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Container exits with code 0 or 1\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check container logs\ndocker logs container_name\n\n# Run interactively for debugging\ndocker run -it myapp /bin/bash\n\n# Check if main process exits\n# Ensure your Dockerfile CMD keeps container running\nCMD ["npm", "start"]  # Not CMD ["npm", "run", "build"]\n\n# Use proper init system for multiple processes\nCMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]\n'})}),"\n",(0,o.jsx)(n.h2,{id:"api-and-network-errors",children:"API and Network Errors"}),"\n",(0,o.jsx)(n.h3,{id:"http-status-code-errors",children:"HTTP Status Code Errors"}),"\n",(0,o.jsx)(n.h4,{id:"400-bad-request",children:"400 Bad Request"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Common Causes:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Invalid JSON format in request body"}),"\n",(0,o.jsx)(n.li,{children:"Missing required parameters"}),"\n",(0,o.jsx)(n.li,{children:"Invalid parameter types"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Debug Steps:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Validate JSON\necho \'{"key": "value"}\' | jq .\n\n# Check request format\ncurl -X POST \\\n  -H "Content-Type: application/json" \\\n  -d \'{"name":"test","email":"test@example.com"}\' \\\n  http://localhost:8000/users\n'})}),"\n",(0,o.jsx)(n.h4,{id:"401-unauthorized",children:"401 Unauthorized"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Common Causes:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Missing authentication token"}),"\n",(0,o.jsx)(n.li,{children:"Expired token"}),"\n",(0,o.jsx)(n.li,{children:"Invalid token format"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Debug Steps:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check token format\ncurl -H \"Authorization: Bearer your-token\" http://localhost:8000/protected\n\n# Verify token expiration\n# Decode JWT token at jwt.io\n\n# Check authentication middleware\nconsole.log('Token:', req.headers.authorization);\n"})}),"\n",(0,o.jsx)(n.h4,{id:"404-not-found",children:"404 Not Found"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Common Causes:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Incorrect URL path"}),"\n",(0,o.jsx)(n.li,{children:"Route not registered"}),"\n",(0,o.jsx)(n.li,{children:"Case sensitivity issues"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Debug Steps:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# List available routes (Express.js)\napp._router.stack.forEach(r => console.log(r.route?.path));\n\n# Check route registration order\n# Specific routes before general ones\napp.get('/users/:id', handler);\napp.get('/users/*', catchAll);  // This should come after\n"})}),"\n",(0,o.jsx)(n.h4,{id:"500-internal-server-error",children:"500 Internal Server Error"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Debug Steps:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check server logs\ntail -f /var/log/app.log\n\n# Enable debug mode\nNODE_ENV=development npm start\n\n# Add error handling\napp.use((error, req, res, next) => {\n  console.error('Error:', error);\n  res.status(500).json({ error: error.message });\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"cors-errors",children:"CORS Errors"}),"\n",(0,o.jsx)(n.h4,{id:"access-control-allow-origin",children:"Access-Control-Allow-Origin"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Access to fetch at 'http://api.example.com' from origin 'http://localhost:3000'\nhas been blocked by CORS policy\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Express.js\nconst cors = require('cors');\napp.use(cors({\n  origin: ['http://localhost:3000', 'https://myapp.com'],\n  credentials: true\n}));\n\n// FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"http://localhost:3000\"],\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n// Manual headers\nres.header('Access-Control-Allow-Origin', 'http://localhost:3000');\nres.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\nres.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n"})}),"\n",(0,o.jsx)(n.h2,{id:"git-errors",children:"Git Errors"}),"\n",(0,o.jsx)(n.h3,{id:"common-git-issues",children:"Common Git Issues"}),"\n",(0,o.jsx)(n.h4,{id:"fatal-not-a-git-repository",children:"fatal: not a git repository"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"fatal: not a git repository (or any of the parent directories): .git\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Initialize git repository\ngit init\n\n# Check if you're in the right directory\npwd\nls -la | grep .git\n\n# Clone repository if it exists remotely\ngit clone https://github.com/user/repo.git\n"})}),"\n",(0,o.jsx)(n.h4,{id:"fatal-remote-origin-already-exists",children:"fatal: remote origin already exists"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"fatal: remote origin already exists\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Remove existing remote\ngit remote remove origin\n\n# Or update existing remote\ngit remote set-url origin https://github.com/user/new-repo.git\n\n# List current remotes\ngit remote -v\n"})}),"\n",(0,o.jsx)(n.h4,{id:"your-branch-is-ahead-of-originmain",children:"Your branch is ahead of 'origin/main'"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Your branch is ahead of 'origin/main' by 2 commits\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Push commits to remote\ngit push origin main\n\n# Reset to remote state (lose local commits)\ngit reset --hard origin/main\n\n# Rebase onto remote\ngit rebase origin/main\n"})}),"\n",(0,o.jsx)(n.h4,{id:"merge-conflicts",children:"Merge conflicts"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"CONFLICT (content): Merge conflict in file.txt\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# View conflicted files\ngit status\n\n# Edit files to resolve conflicts\n# Look for conflict markers:\n<<<<<<< HEAD\nYour changes\n=======\nOther changes\n>>>>>>> branch-name\n\n# After resolving conflicts\ngit add file.txt\ngit commit -m "Resolve merge conflicts"\n\n# Use merge tool\ngit mergetool\n'})}),"\n",(0,o.jsx)(n.h2,{id:"environment-specific-errors",children:"Environment-Specific Errors"}),"\n",(0,o.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,o.jsx)(n.h4,{id:"port-conflicts",children:"Port conflicts"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Error: listen EADDRINUSE: address already in use :::3000\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Find and kill process\nlsof -ti:3000 | xargs kill -9\n\n# Use different port\nPORT=3001 npm start\n\n# In code\nconst PORT = process.env.PORT || 3001;\n"})}),"\n",(0,o.jsx)(n.h4,{id:"environment-variables-not-loaded",children:"Environment variables not loaded"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check if .env file exists\nls -la .env\n\n# Load environment variables\n# Node.js\nrequire('dotenv').config();\n\n# Python\nfrom python-dotenv import load_dotenv\nload_dotenv()\n\n# Verify variables are loaded\nconsole.log('DB_URL:', process.env.DATABASE_URL);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"production-environment",children:"Production Environment"}),"\n",(0,o.jsx)(n.h4,{id:"memory-leaks",children:"Memory leaks"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Debug Steps:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Monitor memory usage\ntop -p $(pgrep node)\n\n# Node.js heap dump\nkill -USR2 $(pgrep node)\n\n# Python memory profiling\npip install memory-profiler\n@profile\ndef my_function():\n    pass\n"})}),"\n",(0,o.jsx)(n.h4,{id:"ssl-certificate-errors",children:"SSL certificate errors"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Error: unable to verify the first certificate\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check certificate validity\nopenssl x509 -in certificate.crt -text -noout\n\n# Update certificate bundle\nnpm config set ca ""\npip install --trusted-host pypi.org --trusted-host pypi.python.org package\n\n# Disable SSL verification (NOT for production)\nNODE_TLS_REJECT_UNAUTHORIZED=0\n'})}),"\n",(0,o.jsx)(n.h2,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,o.jsx)(n.h3,{id:"slow-database-queries",children:"Slow Database Queries"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"-- Find slow queries (PostgreSQL)\nSELECT query, calls, total_time, mean_time\nFROM pg_stat_statements\nORDER BY total_time DESC\nLIMIT 10;\n\n-- Add indexes for common queries\nCREATE INDEX idx_users_email ON users(email);\nCREATE INDEX idx_posts_user_id ON posts(user_id);\n\n-- Use EXPLAIN to analyze query plans\nEXPLAIN ANALYZE SELECT * FROM users WHERE email = 'test@example.com';\n"})}),"\n",(0,o.jsx)(n.h3,{id:"high-memory-usage",children:"High Memory Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check memory usage\nfree -h\nps aux --sort=-%mem | head\n\n# Node.js memory profiling\nnode --inspect --max-old-space-size=4096 app.js\n# Open chrome://inspect in Chrome\n\n# Python memory profiling\nimport tracemalloc\ntracemalloc.start()\n# ... your code ...\ncurrent, peak = tracemalloc.get_traced_memory()\nprint(f"Current memory usage: {current / 1024 / 1024:.1f} MB")\n'})}),"\n",(0,o.jsx)(n.h3,{id:"high-cpu-usage",children:"High CPU Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Find CPU-intensive processes\ntop -o %CPU\n\n# Profile Node.js application\nnode --prof app.js\nnode --prof-process isolate-0x*.log > processed.txt\n\n# Python profiling\npython -m cProfile -o profile.stats script.py\npython -c \"import pstats; pstats.Stats('profile.stats').sort_stats('cumulative').print_stats()\"\n"})}),"\n",(0,o.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,o.jsx)(n.h3,{id:"when-to-escalate",children:"When to Escalate"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Security-related errors"}),"\n",(0,o.jsx)(n.li,{children:"Production system failures"}),"\n",(0,o.jsx)(n.li,{children:"Data corruption issues"}),"\n",(0,o.jsx)(n.li,{children:"Issues affecting multiple team members"}),"\n",(0,o.jsx)(n.li,{children:"Problems persisting after 30+ minutes of troubleshooting"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"debugging-information-to-gather",children:"Debugging Information to Gather"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Exact error message and stack trace"}),"\n",(0,o.jsx)(n.li,{children:"Steps to reproduce the issue"}),"\n",(0,o.jsx)(n.li,{children:"Environment details (OS, versions, etc.)"}),"\n",(0,o.jsx)(n.li,{children:"Recent changes made"}),"\n",(0,o.jsx)(n.li,{children:"Logs before and after the error"}),"\n",(0,o.jsx)(n.li,{children:"Screenshots or screen recordings if applicable"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"useful-commands-for-information-gathering",children:"Useful Commands for Information Gathering"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# System information\nuname -a\ncat /etc/os-release\ndocker version\nnode --version\npython --version\njava -version\n\n# Process information\nps aux | grep process_name\nnetstat -tulpn\nlsof -i :port_number\n\n# Log files\ntail -f /var/log/application.log\njournalctl -u service_name -f\ndocker logs -f container_name\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>a});var s=r(6540);const o={},i=s.createContext(o);function t(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);