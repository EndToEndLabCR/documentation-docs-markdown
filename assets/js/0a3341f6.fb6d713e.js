"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[8309],{8142:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"guides-and-tutorials/debugging-cheatsheet","title":"Debugging Cheatsheet","description":"This file provides a comprehensive cheatsheet for debugging common issues across different technologies and environments.","source":"@site/docs/guides-and-tutorials/debugging-cheatsheet.md","sourceDirName":"guides-and-tutorials","slug":"/guides-and-tutorials/debugging-cheatsheet","permalink":"/documentation-docs-markdown/docs/guides-and-tutorials/debugging-cheatsheet","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/guides-and-tutorials/debugging-cheatsheet.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Tutorial - Extras","permalink":"/documentation-docs-markdown/docs/category/tutorial---extras"},"next":{"title":"Onboarding Guide","permalink":"/documentation-docs-markdown/docs/guides-and-tutorials/onboarding-guide"}}');var s=i(4848),r=i(8453);const o={},l="Debugging Cheatsheet",a={},c=[{value:"General Debugging Principles",id:"general-debugging-principles",level:2},{value:"The Debugging Process",id:"the-debugging-process",level:3},{value:"Essential Debugging Tools",id:"essential-debugging-tools",level:3},{value:"Web Application Debugging",id:"web-application-debugging",level:2},{value:"Browser Developer Tools",id:"browser-developer-tools",level:3},{value:"Console Debugging",id:"console-debugging",level:4},{value:"Network Tab Analysis",id:"network-tab-analysis",level:4},{value:"Elements Tab Tips",id:"elements-tab-tips",level:4},{value:"React Debugging",id:"react-debugging",level:3},{value:"React Developer Tools",id:"react-developer-tools",level:4},{value:"Common React Issues",id:"common-react-issues",level:4},{value:"API Debugging",id:"api-debugging",level:2},{value:"HTTP Status Codes",id:"http-status-codes",level:3},{value:"curl Debugging Commands",id:"curl-debugging-commands",level:3},{value:"Python Requests Debugging",id:"python-requests-debugging",level:3},{value:"Database Debugging",id:"database-debugging",level:2},{value:"PostgreSQL Debugging",id:"postgresql-debugging",level:3},{value:"MongoDB Debugging",id:"mongodb-debugging",level:3},{value:"SQL Query Optimization",id:"sql-query-optimization",level:3},{value:"Docker &amp; Container Debugging",id:"docker--container-debugging",level:2},{value:"Container Inspection",id:"container-inspection",level:3},{value:"Docker Compose Debugging",id:"docker-compose-debugging",level:3},{value:"Container Health Checks",id:"container-health-checks",level:3},{value:"Python Debugging",id:"python-debugging",level:2},{value:"Built-in Debugger (pdb)",id:"built-in-debugger-pdb",level:3},{value:"Logging for Debugging",id:"logging-for-debugging",level:3},{value:"Python Exception Handling",id:"python-exception-handling",level:3},{value:"Java Debugging",id:"java-debugging",level:2},{value:"Debugging with IDE",id:"debugging-with-ide",level:3},{value:"JVM Debugging",id:"jvm-debugging",level:3},{value:"Spring Boot Debugging",id:"spring-boot-debugging",level:3},{value:"Performance Debugging",id:"performance-debugging",level:2},{value:"Frontend Performance",id:"frontend-performance",level:3},{value:"Backend Performance",id:"backend-performance",level:3},{value:"Network Debugging",id:"network-debugging",level:2},{value:"Common Network Tools",id:"common-network-tools",level:3},{value:"SSL/TLS Debugging",id:"ssltls-debugging",level:3},{value:"Environment-Specific Debugging",id:"environment-specific-debugging",level:2},{value:"Development Environment",id:"development-environment",level:3},{value:"Staging Environment",id:"staging-environment",level:3},{value:"Production Environment",id:"production-environment",level:3},{value:"Emergency Debugging Checklist",id:"emergency-debugging-checklist",level:2},{value:"When Everything is Down",id:"when-everything-is-down",level:3},{value:"Quick Health Checks",id:"quick-health-checks",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"debugging-cheatsheet",children:"Debugging Cheatsheet"})}),"\n",(0,s.jsx)(n.p,{children:"This file provides a comprehensive cheatsheet for debugging common issues across different technologies and environments."}),"\n",(0,s.jsx)(n.h2,{id:"general-debugging-principles",children:"General Debugging Principles"}),"\n",(0,s.jsx)(n.h3,{id:"the-debugging-process",children:"The Debugging Process"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reproduce"})," the issue consistently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Isolate"})," the problem area"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Examine"})," logs and error messages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Hypothesize"})," potential causes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test"})," solutions incrementally"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Document"})," the solution"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"essential-debugging-tools",children:"Essential Debugging Tools"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logging"}),": Add strategic log statements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Debuggers"}),": Use IDE debuggers for step-through debugging"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Network Tools"}),": Monitor network requests/responses"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Profilers"}),": Identify bottlenecks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Memory Analyzers"}),": Detect memory leaks"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"web-application-debugging",children:"Web Application Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"browser-developer-tools",children:"Browser Developer Tools"}),"\n",(0,s.jsx)(n.h4,{id:"console-debugging",children:"Console Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Basic logging\nconsole.log("Variable value:", variable);\nconsole.error("Error occurred:", error);\nconsole.warn("Warning message");\n\n// Object inspection\nconsole.table(arrayOfObjects);\nconsole.dir(complexObject);\n\n// Performance timing\nconsole.time("operation");\n// ... code to measure\nconsole.timeEnd("operation");\n\n// Stack trace\nconsole.trace("Execution path");\n\n// Group related logs\nconsole.group("API Calls");\nconsole.log("Request 1");\nconsole.log("Request 2");\nconsole.groupEnd();\n'})}),"\n",(0,s.jsx)(n.h4,{id:"network-tab-analysis",children:"Network Tab Analysis"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check request/response headers"}),"\n",(0,s.jsx)(n.li,{children:"Verify HTTP status codes"}),"\n",(0,s.jsx)(n.li,{children:"Inspect request payloads"}),"\n",(0,s.jsx)(n.li,{children:"Monitor response times"}),"\n",(0,s.jsx)(n.li,{children:"Look for CORS issues"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"elements-tab-tips",children:"Elements Tab Tips"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Select element in console\n$0; // Currently selected element\n$1; // Previously selected element\n\n// Find elements\n$("selector"); // querySelector\n$$("selector"); // querySelectorAll\n\n// Monitor events\nmonitorEvents($0, "click");\nunmonitorEvents($0);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"react-debugging",children:"React Debugging"}),"\n",(0,s.jsx)(n.h4,{id:"react-developer-tools",children:"React Developer Tools"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Component debugging\nconsole.log("Props:", props);\nconsole.log("State:", state);\n\n// Performance profiling\nimport { Profiler } from "react";\n\nfunction onRenderCallback(id, phase, actualDuration) {\n  console.log("Component rendered:", { id, phase, actualDuration });\n}\n\n<Profiler id="MyComponent" onRender={onRenderCallback}>\n  <MyComponent />\n</Profiler>;\n'})}),"\n",(0,s.jsx)(n.h4,{id:"common-react-issues",children:"Common React Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// State not updating immediately\nconst [count, setCount] = useState(0);\n\n// Wrong - state is stale\nconst handleClick = () => {\n  setCount(count + 1);\n  console.log(count); // Still old value\n};\n\n// Correct - use functional update\nconst handleClick = () => {\n  setCount((prev) => {\n    console.log("New value:", prev + 1);\n    return prev + 1;\n  });\n};\n\n// Effect dependency issues\nuseEffect(() => {\n  fetchData(userId);\n}, [userId]); // Include all dependencies\n\n// Infinite re-renders\nuseEffect(() => {\n  setData(processData()); // Don\'t call setState without dependencies\n}, []); // Empty dependency array needed\n'})}),"\n",(0,s.jsx)(n.h2,{id:"api-debugging",children:"API Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"http-status-codes",children:"HTTP Status Codes"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Code"}),(0,s.jsx)(n.th,{children:"Meaning"}),(0,s.jsx)(n.th,{children:"Debug Actions"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"400"}),(0,s.jsx)(n.td,{children:"Bad Request"}),(0,s.jsx)(n.td,{children:"Check request payload format"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"401"}),(0,s.jsx)(n.td,{children:"Unauthorized"}),(0,s.jsx)(n.td,{children:"Verify authentication tokens"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"403"}),(0,s.jsx)(n.td,{children:"Forbidden"}),(0,s.jsx)(n.td,{children:"Check user permissions"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"404"}),(0,s.jsx)(n.td,{children:"Not Found"}),(0,s.jsx)(n.td,{children:"Verify URL and route configuration"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"429"}),(0,s.jsx)(n.td,{children:"Too Many Requests"}),(0,s.jsx)(n.td,{children:"Implement rate limiting or backoff"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"500"}),(0,s.jsx)(n.td,{children:"Internal Server Error"}),(0,s.jsx)(n.td,{children:"Check server logs"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"502"}),(0,s.jsx)(n.td,{children:"Bad Gateway"}),(0,s.jsx)(n.td,{children:"Check proxy/load balancer config"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"503"}),(0,s.jsx)(n.td,{children:"Service Unavailable"}),(0,s.jsx)(n.td,{children:"Check service health"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"curl-debugging-commands",children:"curl Debugging Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Basic GET request\ncurl -v https://api.example.com/users\n\n# POST with JSON data\ncurl -X POST \\\n  -H "Content-Type: application/json" \\\n  -H "Authorization: Bearer token" \\\n  -d \'{"name":"John","email":"john@example.com"}\' \\\n  https://api.example.com/users\n\n# Save response to file\ncurl -o response.json https://api.example.com/data\n\n# Follow redirects\ncurl -L https://api.example.com/redirect\n\n# Show only response headers\ncurl -I https://api.example.com/users\n\n# Test with different HTTP methods\ncurl -X PUT -d "data" https://api.example.com/resource/1\ncurl -X DELETE https://api.example.com/resource/1\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-requests-debugging",children:"Python Requests Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import requests\nimport logging\n\n# Enable debug logging\nlogging.basicConfig(level=logging.DEBUG)\n\n# Add request/response logging\nsession = requests.Session()\nsession.hooks['response'] = lambda r, *args, **kwargs: print(f\"Response: {r.status_code}\")\n\n# Debug specific request\nresponse = requests.get('https://api.example.com/users',\n                       headers={'Authorization': 'Bearer token'})\n\nprint(f\"Status: {response.status_code}\")\nprint(f\"Headers: {response.headers}\")\nprint(f\"Content: {response.text}\")\n"})}),"\n",(0,s.jsx)(n.h2,{id:"database-debugging",children:"Database Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"postgresql-debugging",children:"PostgreSQL Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Check active connections\nSELECT pid, usename, application_name, client_addr, state, query\nFROM pg_stat_activity\nWHERE state = 'active';\n\n-- Analyze slow queries\nEXPLAIN ANALYZE SELECT * FROM users WHERE email = 'john@example.com';\n\n-- Check table sizes\nSELECT schemaname, tablename,\n       pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size\nFROM pg_tables\nWHERE schemaname = 'public'\nORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC;\n\n-- Monitor locks\nSELECT blocked_locks.pid AS blocked_pid,\n       blocked_activity.usename AS blocked_user,\n       blocking_locks.pid AS blocking_pid,\n       blocking_activity.usename AS blocking_user,\n       blocked_activity.query AS blocked_statement,\n       blocking_activity.query AS current_statement_in_blocking_process\nFROM pg_catalog.pg_locks blocked_locks\nJOIN pg_catalog.pg_stat_activity blocked_activity ON blocked_activity.pid = blocked_locks.pid\nJOIN pg_catalog.pg_locks blocking_locks ON blocking_locks.locktype = blocked_locks.locktype\nJOIN pg_catalog.pg_stat_activity blocking_activity ON blocking_activity.pid = blocking_locks.pid\nWHERE NOT blocked_locks.granted;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mongodb-debugging",children:"MongoDB Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Enable profiler\ndb.setProfilingLevel(2);\n\n// Check slow operations\ndb.system.profile.find().limit(5).sort({ ts: -1 });\n\n// Explain query execution\ndb.users.find({ email: "john@example.com" }).explain("executionStats");\n\n// Check index usage\ndb.users.getIndexes();\n\n// Monitor current operations\ndb.currentOp();\n\n// Kill long-running operation\ndb.killOp(opId);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"sql-query-optimization",children:"SQL Query Optimization"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Use EXPLAIN to understand query execution\nEXPLAIN (ANALYZE, BUFFERS)\nSELECT u.name, p.title\nFROM users u\nJOIN posts p ON u.id = p.user_id\nWHERE u.created_at > '2023-01-01';\n\n-- Check for missing indexes\nSELECT schemaname, tablename, attname, n_distinct, correlation\nFROM pg_stats\nWHERE tablename = 'users';\n\n-- Monitor query performance\nSELECT query, calls, total_time, mean_time, rows\nFROM pg_stat_statements\nORDER BY total_time DESC\nLIMIT 10;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"docker--container-debugging",children:"Docker & Container Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"container-inspection",children:"Container Inspection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# List running containers\ndocker ps\n\n# Inspect container details\ndocker inspect container_name\n\n# Check container logs\ndocker logs -f container_name\n\n# Execute commands in running container\ndocker exec -it container_name /bin/bash\n\n# Check container resource usage\ndocker stats container_name\n\n# Copy files from/to container\ndocker cp container_name:/path/to/file ./local/path\ndocker cp ./local/file container_name:/path/to/destination\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-compose-debugging",children:"Docker Compose Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# View service logs\ndocker-compose logs service_name\n\n# Follow logs for all services\ndocker-compose logs -f\n\n# Check service status\ndocker-compose ps\n\n# Rebuild and restart services\ndocker-compose down\ndocker-compose up --build\n\n# Override command for debugging\ndocker-compose run --rm service_name /bin/bash\n"})}),"\n",(0,s.jsx)(n.h3,{id:"container-health-checks",children:"Container Health Checks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:"# Add health check to Dockerfile\nHEALTHCHECK --interval=30s --timeout=3s --retries=3 \\\n  CMD curl -f http://localhost:8000/health || exit 1\n\n# Check health status\ndocker inspect --format='{{.State.Health.Status}}' container_name\n"})}),"\n",(0,s.jsx)(n.h2,{id:"python-debugging",children:"Python Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"built-in-debugger-pdb",children:"Built-in Debugger (pdb)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import pdb\n\ndef problematic_function(data):\n    # Set breakpoint\n    pdb.set_trace()\n\n    result = process_data(data)\n    return result\n\n# Debugging commands in pdb:\n# n - next line\n# s - step into function\n# c - continue execution\n# l - list current code\n# p variable_name - print variable\n# pp variable_name - pretty print\n# h - help\n# q - quit debugger\n"})}),"\n",(0,s.jsx)(n.h3,{id:"logging-for-debugging",children:"Logging for Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import logging\n\n# Configure logging\nlogging.basicConfig(\n    level=logging.DEBUG,\n    format=\'%(asctime)s - %(name)s - %(levelname)s - %(message)s\',\n    handlers=[\n        logging.FileHandler(\'debug.log\'),\n        logging.StreamHandler()\n    ]\n)\n\nlogger = logging.getLogger(__name__)\n\ndef debug_function(data):\n    logger.debug(f"Function called with data: {data}")\n\n    try:\n        result = risky_operation(data)\n        logger.info(f"Operation successful: {result}")\n        return result\n    except Exception as e:\n        logger.error(f"Operation failed: {e}", exc_info=True)\n        raise\n\n# Use different log levels\nlogger.debug("Detailed debugging info")\nlogger.info("General information")\nlogger.warning("Warning message")\nlogger.error("Error occurred")\nlogger.critical("Critical error")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-exception-handling",children:"Python Exception Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import traceback\nimport sys\n\ntry:\n    risky_operation()\nexcept Exception as e:\n    # Print full traceback\n    traceback.print_exc()\n\n    # Get traceback as string\n    error_details = traceback.format_exc()\n    logger.error(f"Error details: {error_details}")\n\n    # Get exception info\n    exc_type, exc_value, exc_traceback = sys.exc_info()\n    print(f"Exception type: {exc_type.__name__}")\n    print(f"Exception value: {exc_value}")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"java-debugging",children:"Java Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"debugging-with-ide",children:"Debugging with IDE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Set breakpoints and use IDE debugger\npublic class DebuggingExample {\n    public static void main(String[] args) {\n        List<String> items = Arrays.asList("a", "b", "c");\n\n        // Conditional breakpoint: right-click breakpoint, add condition\n        for (int i = 0; i < items.size(); i++) {\n            String item = items.get(i);\n            System.out.println(item); // Breakpoint here\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"jvm-debugging",children:"JVM Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Enable remote debugging\njava -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 MyApp\n\n# Memory debugging\njava -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/heapdump.hprof MyApp\n\n# GC debugging\njava -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Xloggc:gc.log MyApp\n\n# JVM monitoring\njps          # List Java processes\njstat -gc pid # GC statistics\njmap -histo pid # Heap histogram\njstack pid   # Thread dump\n"})}),"\n",(0,s.jsx)(n.h3,{id:"spring-boot-debugging",children:"Spring Boot Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@RestController\npublic class DebugController {\n\n    private static final Logger logger = LoggerFactory.getLogger(DebugController.class);\n\n    @GetMapping("/debug")\n    public ResponseEntity<String> debugEndpoint() {\n        logger.debug("Debug endpoint called");\n\n        // Log method parameters and return values\n        String result = performOperation();\n        logger.info("Operation result: {}", result);\n\n        return ResponseEntity.ok(result);\n    }\n}\n\n# Enable debug logging in application.yml\nlogging:\n  level:\n    com.yourpackage: DEBUG\n    org.springframework.web: DEBUG\n    org.hibernate.SQL: DEBUG\n'})}),"\n",(0,s.jsx)(n.h2,{id:"performance-debugging",children:"Performance Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"frontend-performance",children:"Frontend Performance"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Measure performance\nconst start = performance.now();\nexpensiveOperation();\nconst end = performance.now();\nconsole.log(`Operation took ${end - start} milliseconds`);\n\n// Monitor largest contentful paint\nnew PerformanceObserver((list) => {\n  for (const entry of list.getEntries()) {\n    console.log("LCP:", entry.startTime);\n  }\n}).observe({ entryTypes: ["largest-contentful-paint"] });\n\n// Check memory usage\nconsole.log("Memory usage:", performance.memory);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"backend-performance",children:"Backend Performance"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import time\nimport psutil\nfrom functools import wraps\n\ndef monitor_performance(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        start_time = time.time()\n        start_memory = psutil.Process().memory_info().rss / 1024 / 1024\n\n        result = func(*args, **kwargs)\n\n        end_time = time.time()\n        end_memory = psutil.Process().memory_info().rss / 1024 / 1024\n\n        print(f"{func.__name__} took {end_time - start_time:.2f} seconds")\n        print(f"Memory usage: {end_memory - start_memory:.2f} MB")\n\n        return result\n    return wrapper\n\n@monitor_performance\ndef expensive_operation():\n    # Your code here\n    pass\n'})}),"\n",(0,s.jsx)(n.h2,{id:"network-debugging",children:"Network Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"common-network-tools",children:"Common Network Tools"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Test connectivity\nping google.com\ntelnet hostname 80\nnc -zv hostname 80-90  # Port scan\n\n# DNS resolution\nnslookup domain.com\ndig domain.com\nhost domain.com\n\n# Trace network path\ntraceroute google.com\nmtr google.com\n\n# Monitor network traffic\nnetstat -tuln  # Show listening ports\nss -tuln       # Modern alternative to netstat\nlsof -i :8080  # Show what's using port 8080\n\n# Check HTTP headers\ncurl -I https://example.com\nwget --server-response https://example.com\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ssltls-debugging",children:"SSL/TLS Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Test SSL connection\nopenssl s_client -connect example.com:443\n\n# Check certificate details\nopenssl x509 -in certificate.crt -text -noout\n\n# Verify certificate chain\nopenssl verify -CAfile ca-bundle.crt certificate.crt\n\n# Test specific SSL protocols\ncurl --tlsv1.2 https://example.com\ncurl --sslv3 https://example.com\n"})}),"\n",(0,s.jsx)(n.h2,{id:"environment-specific-debugging",children:"Environment-Specific Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use detailed logging"}),"\n",(0,s.jsx)(n.li,{children:"Enable all debugging features"}),"\n",(0,s.jsx)(n.li,{children:"Use development databases"}),"\n",(0,s.jsx)(n.li,{children:"Disable caching for real-time updates"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"staging-environment",children:"Staging Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Mirror production configuration"}),"\n",(0,s.jsx)(n.li,{children:"Use production-like data volumes"}),"\n",(0,s.jsx)(n.li,{children:"Enable monitoring and alerting"}),"\n",(0,s.jsx)(n.li,{children:"Test deployment procedures"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"production-environment",children:"Production Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implement proper logging levels"}),"\n",(0,s.jsx)(n.li,{children:"Use monitoring and alerting"}),"\n",(0,s.jsx)(n.li,{children:"Have rollback procedures ready"}),"\n",(0,s.jsx)(n.li,{children:"Maintain debug information securely"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"emergency-debugging-checklist",children:"Emergency Debugging Checklist"}),"\n",(0,s.jsx)(n.h3,{id:"when-everything-is-down",children:"When Everything is Down"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Check system status dashboard"}),"\n",(0,s.jsx)(n.li,{children:"Review recent deployments"}),"\n",(0,s.jsx)(n.li,{children:"Check monitoring alerts"}),"\n",(0,s.jsx)(n.li,{children:"Examine application logs"}),"\n",(0,s.jsx)(n.li,{children:"Verify database connectivity"}),"\n",(0,s.jsx)(n.li,{children:"Check network connectivity"}),"\n",(0,s.jsx)(n.li,{children:"Review resource utilization"}),"\n",(0,s.jsx)(n.li,{children:"Check for DDoS or security incidents"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"quick-health-checks",children:"Quick Health Checks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# System resources\ntop\ndf -h\nfree -m\n\n# Service status\nsystemctl status service_name\ndocker ps\nkubectl get pods\n\n# Network connectivity\nping gateway\ncurl health_endpoint\n\n# Database connectivity\npsql -h db_host -U user -c "SELECT 1;"\nredis-cli ping\n'})}),"\n",(0,s.jsx)(n.p,{children:"Remember: Always debug systematically, document your findings, and share solutions with your team!"})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);