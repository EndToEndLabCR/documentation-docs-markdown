"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[6029],{5242:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"tech-stack/git-and-github/github-actions","title":"GitHub Actions","description":"This file covers GitHub Actions for CI/CD automation and workflow management.","source":"@site/docs/tech-stack/git-and-github/github-actions.md","sourceDirName":"tech-stack/git-and-github","slug":"/tech-stack/git-and-github/github-actions","permalink":"/documentation-docs-markdown/docs/tech-stack/git-and-github/github-actions","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/tech-stack/git-and-github/github-actions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Project Name","permalink":"/documentation-docs-markdown/docs/tech-stack/git-and-github/github/resources/readme-template"},"next":{"title":"Python Dependency Management","permalink":"/documentation-docs-markdown/docs/tech-stack/python/dependency-management"}}');var s=t(4848),i=t(8453);const a={},r="GitHub Actions",c={},l=[{value:"What are GitHub Actions?",id:"what-are-github-actions",level:2},{value:"Basic Workflow",id:"basic-workflow",level:2},{value:"Common Workflows",id:"common-workflows",level:2},{value:"Node.js Application",id:"nodejs-application",level:3},{value:"Python Application",id:"python-application",level:3},{value:"Deployment Workflow",id:"deployment-workflow",level:2},{value:"Best Practices",id:"best-practices",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"github-actions",children:"GitHub Actions"})}),"\n",(0,s.jsx)(e.p,{children:"This file covers GitHub Actions for CI/CD automation and workflow management."}),"\n",(0,s.jsx)(e.h2,{id:"what-are-github-actions",children:"What are GitHub Actions?"}),"\n",(0,s.jsx)(e.p,{children:"GitHub Actions is a CI/CD platform that allows you to automate your build, test, and deployment pipeline directly in your GitHub repository."}),"\n",(0,s.jsx)(e.h2,{id:"basic-workflow",children:"Basic Workflow"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'# .github/workflows/ci.yml\nname: CI\n\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Set up Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: "18"\n          cache: "npm"\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run tests\n        run: npm test\n\n      - name: Run linter\n        run: npm run lint\n'})}),"\n",(0,s.jsx)(e.h2,{id:"common-workflows",children:"Common Workflows"}),"\n",(0,s.jsx)(e.h3,{id:"nodejs-application",children:"Node.js Application"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"name: Node.js CI\n\non: [push, pull_request]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        node-version: [16.x, 18.x, 20.x]\n\n    steps:\n      - uses: actions/checkout@v3\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v3\n        with:\n          node-version: ${{ matrix.node-version }}\n      - run: npm ci\n      - run: npm test\n"})}),"\n",(0,s.jsx)(e.h3,{id:"python-application",children:"Python Application"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"name: Python CI\n\non: [push, pull_request]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        python-version: [3.8, 3.9, 3.10]\n\n    steps:\n      - uses: actions/checkout@v3\n      - name: Set up Python ${{ matrix.python-version }}\n        uses: actions/setup-python@v4\n        with:\n          python-version: ${{ matrix.python-version }}\n      - name: Install dependencies\n        run: |\n          python -m pip install --upgrade pip\n          pip install -r requirements.txt\n      - name: Run tests\n        run: pytest\n"})}),"\n",(0,s.jsx)(e.h2,{id:"deployment-workflow",children:"Deployment Workflow"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'name: Deploy\n\non:\n  push:\n    branches: [main]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Deploy to staging\n        run: |\n          # Deployment commands here\n          echo "Deploying to staging..."\n\n      - name: Run smoke tests\n        run: |\n          # Smoke test commands\n          echo "Running smoke tests..."\n'})}),"\n",(0,s.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Use official actions when available"}),"\n",(0,s.jsx)(e.li,{children:"Cache dependencies for faster builds"}),"\n",(0,s.jsx)(e.li,{children:"Use matrix builds for multiple environments"}),"\n",(0,s.jsx)(e.li,{children:"Store secrets securely"}),"\n",(0,s.jsx)(e.li,{children:"Use environment protection rules"}),"\n",(0,s.jsx)(e.li,{children:"Implement proper error handling"}),"\n",(0,s.jsx)(e.li,{children:"Monitor workflow performance"}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>r});var o=t(6540);const s={},i=o.createContext(s);function a(n){const e=o.useContext(i);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);