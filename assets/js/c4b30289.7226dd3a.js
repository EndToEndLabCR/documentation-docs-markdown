"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[2368],{3500:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tech-stack/frontend/javascript-and-typescript","title":"JavaScript and TypeScript","description":"This file covers JavaScript and TypeScript fundamentals for frontend development.","source":"@site/docs/tech-stack/frontend/javascript-and-typescript.md","sourceDirName":"tech-stack/frontend","slug":"/tech-stack/frontend/javascript-and-typescript","permalink":"/documentation-docs-markdown/docs/tech-stack/frontend/javascript-and-typescript","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/tech-stack/frontend/javascript-and-typescript.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Docker Troubleshooting","permalink":"/documentation-docs-markdown/docs/tech-stack/docker/troubleshooting"},"next":{"title":"React Component Structure","permalink":"/documentation-docs-markdown/docs/tech-stack/frontend/react/component-structure"}}');var s=t(4848),a=t(8453);const i={},c="JavaScript and TypeScript",o={},d=[{value:"Modern JavaScript (ES6+)",id:"modern-javascript-es6",level:2},{value:"Arrow Functions",id:"arrow-functions",level:3},{value:"Destructuring",id:"destructuring",level:3},{value:"Template Literals",id:"template-literals",level:3},{value:"TypeScript Advantages",id:"typescript-advantages",level:2},{value:"Type Safety",id:"type-safety",level:3},{value:"Generic Types",id:"generic-types",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"JavaScript",id:"javascript",level:3},{value:"TypeScript",id:"typescript",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"javascript-and-typescript",children:"JavaScript and TypeScript"})}),"\n",(0,s.jsx)(n.p,{children:"This file covers JavaScript and TypeScript fundamentals for frontend development."}),"\n",(0,s.jsx)(n.h2,{id:"modern-javascript-es6",children:"Modern JavaScript (ES6+)"}),"\n",(0,s.jsx)(n.h3,{id:"arrow-functions",children:"Arrow Functions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Traditional function\nfunction add(a, b) {\n  return a + b;\n}\n\n// Arrow function\nconst add = (a, b) => a + b;\n\n// With multiple statements\nconst processData = (data) => {\n  const cleaned = data.filter((item) => item.valid);\n  return cleaned.map((item) => item.value);\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"destructuring",children:"Destructuring"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Object destructuring\nconst user = { name: "John", age: 30, email: "john@example.com" };\nconst { name, age } = user;\n\n// Array destructuring\nconst colors = ["red", "green", "blue"];\nconst [primary, secondary] = colors;\n\n// Function parameters\nconst greet = ({ name, age }) => `Hello ${name}, you are ${age}`;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"template-literals",children:"Template Literals"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const name = "World";\nconst greeting = `Hello, ${name}!`;\n\n// Multi-line strings\nconst html = `\n  <div>\n    <h1>${title}</h1>\n    <p>${description}</p>\n  </div>\n`;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"typescript-advantages",children:"TypeScript Advantages"}),"\n",(0,s.jsx)(n.h3,{id:"type-safety",children:"Type Safety"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'interface User {\n  id: number;\n  name: string;\n  email: string;\n  isActive?: boolean;\n}\n\nconst createUser = (userData: Omit<User, "id">): User => {\n  return {\n    id: Math.random(),\n    ...userData,\n    isActive: userData.isActive ?? true,\n  };\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"generic-types",children:"Generic Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ApiResponse<T> {\n  data: T;\n  status: number;\n  message: string;\n}\n\nconst fetchUser = async (id: number): Promise<ApiResponse<User>> => {\n  const response = await fetch(`/api/users/${id}`);\n  return response.json();\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use const by default, let when reassignment needed"}),"\n",(0,s.jsx)(n.li,{children:"Prefer template literals over string concatenation"}),"\n",(0,s.jsx)(n.li,{children:"Use async/await over Promises when possible"}),"\n",(0,s.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enable strict mode in tsconfig.json"}),"\n",(0,s.jsx)(n.li,{children:"Use interfaces for object shapes"}),"\n",(0,s.jsx)(n.li,{children:"Leverage union types for flexibility"}),"\n",(0,s.jsx)(n.li,{children:"Use proper type guards for runtime checks"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);