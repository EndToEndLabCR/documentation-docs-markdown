"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[6690],{8030:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"faq-and-troubleshooting/ci-cd-issues","title":"CI/CD Issues","description":"This file addresses common continuous integration and continuous deployment problems and their solutions.","source":"@site/docs/faq-and-troubleshooting/ci-cd-issues.md","sourceDirName":"faq-and-troubleshooting","slug":"/faq-and-troubleshooting/ci-cd-issues","permalink":"/documentation-docs-markdown/docs/faq-and-troubleshooting/ci-cd-issues","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/faq-and-troubleshooting/ci-cd-issues.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"FAQ and Troubleshooting","permalink":"/documentation-docs-markdown/docs/category/faq-and-troubleshooting"},"next":{"title":"Common Errors","permalink":"/documentation-docs-markdown/docs/faq-and-troubleshooting/common-errors"}}');var l=s(4848),r=s(8453);const t={},a="CI/CD Issues",o={},c=[{value:"GitHub Actions Issues",id:"github-actions-issues",level:2},{value:"Workflow Not Triggering",id:"workflow-not-triggering",level:3},{value:"Common Causes",id:"common-causes",level:4},{value:"Solutions",id:"solutions",level:4},{value:"Debug Steps",id:"debug-steps",level:4},{value:"Authentication and Permissions",id:"authentication-and-permissions",level:3},{value:"Secrets Not Available",id:"secrets-not-available",level:4},{value:"Permission Denied Errors",id:"permission-denied-errors",level:4},{value:"Build Failures",id:"build-failures",level:3},{value:"Dependency Installation Issues",id:"dependency-installation-issues",level:4},{value:"Environment Issues",id:"environment-issues",level:4},{value:"Testing Issues",id:"testing-issues",level:3},{value:"Test Failures in CI but Pass Locally",id:"test-failures-in-ci-but-pass-locally",level:4},{value:"Flaky Tests",id:"flaky-tests",level:4},{value:"Deployment Issues",id:"deployment-issues",level:3},{value:"Docker Build Failures",id:"docker-build-failures",level:4},{value:"AWS Deployment Issues",id:"aws-deployment-issues",level:4},{value:"Jenkins Issues",id:"jenkins-issues",level:2},{value:"Pipeline Syntax Errors",id:"pipeline-syntax-errors",level:3},{value:"Groovy Syntax Issues",id:"groovy-syntax-issues",level:4},{value:"Agent and Node Issues",id:"agent-and-node-issues",level:3},{value:"No Available Agents",id:"no-available-agents",level:4},{value:"Plugin Issues",id:"plugin-issues",level:3},{value:"Missing Plugins",id:"missing-plugins",level:4},{value:"GitLab CI Issues",id:"gitlab-ci-issues",level:2},{value:"Runner Problems",id:"runner-problems",level:3},{value:"No Runners Available",id:"no-runners-available",level:4},{value:"Runner Configuration Issues",id:"runner-configuration-issues",level:4},{value:"Cache and Artifacts Issues",id:"cache-and-artifacts-issues",level:3},{value:"Cache Not Working",id:"cache-not-working",level:4},{value:"General CI/CD Debugging",id:"general-cicd-debugging",level:2},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Slow Build Times",id:"slow-build-times",level:4},{value:"Resource Constraints",id:"resource-constraints",level:4},{value:"Security Issues",id:"security-issues",level:3},{value:"Exposed Secrets",id:"exposed-secrets",level:4},{value:"Monitoring and Debugging",id:"monitoring-and-debugging",level:3},{value:"Enable Debug Logging",id:"enable-debug-logging",level:4},{value:"Troubleshooting Steps",id:"troubleshooting-steps",level:4},{value:"Common Anti-patterns",id:"common-anti-patterns",level:3},{value:"Don&#39;t Do This",id:"dont-do-this",level:4},{value:"Best Practices",id:"best-practices",level:4},{value:"Emergency Procedures",id:"emergency-procedures",level:3},{value:"Rollback Strategies",id:"rollback-strategies",level:4},{value:"When to Contact Support",id:"when-to-contact-support",level:4}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"cicd-issues",children:"CI/CD Issues"})}),"\n",(0,l.jsx)(e.p,{children:"This file addresses common continuous integration and continuous deployment problems and their solutions."}),"\n",(0,l.jsx)(e.h2,{id:"github-actions-issues",children:"GitHub Actions Issues"}),"\n",(0,l.jsx)(e.h3,{id:"workflow-not-triggering",children:"Workflow Not Triggering"}),"\n",(0,l.jsx)(e.h4,{id:"common-causes",children:"Common Causes"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Workflow file not in ",(0,l.jsx)(e.code,{children:".github/workflows/"})," directory"]}),"\n",(0,l.jsx)(e.li,{children:"YAML syntax errors"}),"\n",(0,l.jsx)(e.li,{children:"Incorrect trigger configuration"}),"\n",(0,l.jsx)(e.li,{children:"Branch protection rules blocking workflow"}),"\n"]}),"\n",(0,l.jsx)(e.h4,{id:"solutions",children:"Solutions"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Check workflow file location\n.github/\n  workflows/\n    ci.yml  # Must be in this directory\n\n# Verify trigger syntax\nname: CI\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\n# Check for YAML syntax errors\n# Use online YAML validator or:\nyamllint .github/workflows/ci.yml\n"})}),"\n",(0,l.jsx)(e.h4,{id:"debug-steps",children:"Debug Steps"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"# Check workflow runs in GitHub UI\n# Go to Actions tab in repository\n\n# Verify webhook deliveries\n# Settings \u2192 Webhooks \u2192 View deliveries\n\n# Check branch protection rules\n# Settings \u2192 Branches \u2192 Protection rules\n"})}),"\n",(0,l.jsx)(e.h3,{id:"authentication-and-permissions",children:"Authentication and Permissions"}),"\n",(0,l.jsx)(e.h4,{id:"secrets-not-available",children:"Secrets Not Available"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Error: Secret not found\n- name: Deploy\n  env:\n    API_KEY: ${{ secrets.API_KEY }} # Secret not set\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:'# Add secrets in GitHub repository:\n# Settings \u2192 Secrets and variables \u2192 Actions \u2192 New repository secret\n\n# For organization secrets:\n# Organization Settings \u2192 Secrets and variables \u2192 Actions\n\n# Check secret availability in workflow\n- name: Check secrets\n  run: |\n    if [ -z "${{ secrets.API_KEY }}" ]; then\n      echo "API_KEY secret not found"\n      exit 1\n    fi\n'})}),"\n",(0,l.jsx)(e.h4,{id:"permission-denied-errors",children:"Permission Denied Errors"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Error: Permission denied when pushing/deploying\n- name: Deploy\n  run: |\n    git push origin main  # May fail without proper permissions\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# Use GitHub token for Git operations\n- name: Deploy\n  env:\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n  run: |\n    git config --global user.name "github-actions[bot]"\n    git config --global user.email "github-actions[bot]@users.noreply.github.com"\n    git push https://$GITHUB_TOKEN@github.com/${{ github.repository }}.git\n\n# Set proper permissions for workflow\npermissions:\n  contents: write\n  packages: read\n  deployments: write\n'})}),"\n",(0,l.jsx)(e.h3,{id:"build-failures",children:"Build Failures"}),"\n",(0,l.jsx)(e.h4,{id:"dependency-installation-issues",children:"Dependency Installation Issues"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Node.js dependency issues\n- name: Install dependencies\n  run: npm ci # May fail due to package-lock.json issues\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Use caching for dependencies\n- name: Cache Node modules\n  uses: actions/cache@v3\n  with:\n    path: ~/.npm\n    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n    restore-keys: |\n      ${{ runner.os }}-node-\n\n- name: Install dependencies\n  run: |\n    npm ci --prefer-offline --no-audit\n\n# For Python projects\n- name: Cache pip dependencies\n  uses: actions/cache@v3\n  with:\n    path: ~/.cache/pip\n    key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}\n    restore-keys: |\n      ${{ runner.os }}-pip-\n\n- name: Install dependencies\n  run: |\n    python -m pip install --upgrade pip\n    pip install -r requirements.txt\n"})}),"\n",(0,l.jsx)(e.h4,{id:"environment-issues",children:"Environment Issues"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# Wrong Node.js version\n- name: Setup Node.js\n  uses: actions/setup-node@v3\n  with:\n    node-version: "16" # May not match local development\n'})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# Use matrix builds for multiple versions\nstrategy:\n  matrix:\n    node-version: [16, 18, 20]\n    os: [ubuntu-latest, windows-latest, macos-latest]\n\nsteps:\n  - name: Setup Node.js ${{ matrix.node-version }}\n    uses: actions/setup-node@v3\n    with:\n      node-version: ${{ matrix.node-version }}\n\n  # Use .nvmrc file for consistency\n  - name: Read .nvmrc\n    run: echo "node_version=$(cat .nvmrc)" >> $GITHUB_OUTPUT\n    id: nvmrc\n\n  - name: Setup Node.js\n    uses: actions/setup-node@v3\n    with:\n      node-version: ${{ steps.nvmrc.outputs.node_version }}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"testing-issues",children:"Testing Issues"}),"\n",(0,l.jsx)(e.h4,{id:"test-failures-in-ci-but-pass-locally",children:"Test Failures in CI but Pass Locally"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Tests fail due to environment differences\n- name: Run tests\n  run: npm test\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Common Causes and Solutions:"})}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.strong,{children:"Timezone differences"})}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"- name: Run tests\n  env:\n    TZ: UTC\n  run: npm test\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"2",children:["\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.strong,{children:"Database/service dependencies"})}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Use service containers\nservices:\n  postgres:\n    image: postgres:14\n    env:\n      POSTGRES_PASSWORD: password\n    options: >-\n      --health-cmd pg_isready\n      --health-interval 10s\n      --health-timeout 5s\n      --health-retries 5\n    ports:\n      - 5432:5432\n\n- name: Run tests\n  env:\n    DATABASE_URL: postgresql://postgres:password@localhost:5432/test\n  run: npm test\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"3",children:["\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.strong,{children:"Race conditions"})}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"- name: Wait for services\n  run: |\n    npx wait-on http://localhost:3000\n    npx wait-on tcp:localhost:5432\n"})}),"\n",(0,l.jsx)(e.h4,{id:"flaky-tests",children:"Flaky Tests"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Tests pass/fail randomly\n- name: Run tests with retry\n  uses: nick-invision/retry@v2\n  with:\n    timeout_minutes: 10\n    max_attempts: 3\n    command: npm test\n"})}),"\n",(0,l.jsx)(e.h3,{id:"deployment-issues",children:"Deployment Issues"}),"\n",(0,l.jsx)(e.h4,{id:"docker-build-failures",children:"Docker Build Failures"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Docker build context issues\n- name: Build Docker image\n  run: |\n    docker build -t myapp .  # May fail due to context\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# Use Docker Buildx action\n- name: Set up Docker Buildx\n  uses: docker/setup-buildx-action@v2\n\n- name: Build and push\n  uses: docker/build-push-action@v4\n  with:\n    context: .\n    push: true\n    tags: myregistry/myapp:latest\n    cache-from: type=gha\n    cache-to: type=gha,mode=max\n\n# Multi-stage build optimization\nFROM node:18-alpine AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\n\nFROM node:18-alpine AS runtime\nWORKDIR /app\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY . .\nCMD ["npm", "start"]\n'})}),"\n",(0,l.jsx)(e.h4,{id:"aws-deployment-issues",children:"AWS Deployment Issues"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# AWS credentials not configured\n- name: Deploy to AWS\n  run: |\n    aws s3 sync dist/ s3://my-bucket/  # May fail without credentials\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'- name: Configure AWS credentials\n  uses: aws-actions/configure-aws-credentials@v2\n  with:\n    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n    aws-region: us-east-1\n\n- name: Deploy to S3\n  run: |\n    aws s3 sync dist/ s3://my-bucket/ --delete\n    aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/*"\n'})}),"\n",(0,l.jsx)(e.h2,{id:"jenkins-issues",children:"Jenkins Issues"}),"\n",(0,l.jsx)(e.h3,{id:"pipeline-syntax-errors",children:"Pipeline Syntax Errors"}),"\n",(0,l.jsx)(e.h4,{id:"groovy-syntax-issues",children:"Groovy Syntax Issues"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-groovy",children:"// Common syntax errors\npipeline {\n    agent any\n    stages {\n        stage('Build') {\n            steps {\n                sh 'npm install'  // Missing quotes around shell commands\n                sh npm test       // Wrong: should be quoted\n            }\n        }\n    }\n}\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-groovy",children:"pipeline {\n    agent any\n    stages {\n        stage('Build') {\n            steps {\n                sh 'npm install'\n                sh 'npm test'\n\n                // For multi-line commands\n                sh '''\n                    npm install\n                    npm run build\n                    npm test\n                '''\n            }\n        }\n    }\n}\n\n// Use Jenkins pipeline syntax generator\n// Jenkins \u2192 Pipeline Syntax \u2192 Snippet Generator\n"})}),"\n",(0,l.jsx)(e.h3,{id:"agent-and-node-issues",children:"Agent and Node Issues"}),"\n",(0,l.jsx)(e.h4,{id:"no-available-agents",children:"No Available Agents"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-groovy",children:"pipeline {\n    agent { label 'nonexistent-label' }  // No agents with this label\n}\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-groovy",children:"// Use any available agent\npipeline {\n    agent any\n    // ...\n}\n\n// Use specific agent with fallback\npipeline {\n    agent {\n        label 'docker || linux'\n    }\n    // ...\n}\n\n// Use none and specify per stage\npipeline {\n    agent none\n    stages {\n        stage('Build') {\n            agent { label 'build-agent' }\n            steps {\n                sh 'make build'\n            }\n        }\n        stage('Test') {\n            agent { label 'test-agent' }\n            steps {\n                sh 'make test'\n            }\n        }\n    }\n}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"plugin-issues",children:"Plugin Issues"}),"\n",(0,l.jsx)(e.h4,{id:"missing-plugins",children:"Missing Plugins"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-groovy",children:"// Using plugins that aren't installed\npipeline {\n    stages {\n        stage('Deploy') {\n            steps {\n                publishHTML([  // Requires HTML Publisher plugin\n                    allowMissing: false,\n                    alwaysLinkToLastBuild: false,\n                    keepAll: true,\n                    reportDir: 'coverage',\n                    reportFiles: 'index.html',\n                    reportName: 'Coverage Report'\n                ])\n            }\n        }\n    }\n}\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Install required plugins through Jenkins UI"}),"\n",(0,l.jsx)(e.li,{children:"Use plugin manager CLI"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"java -jar jenkins-cli.jar -s http://localhost:8080/ install-plugin html-publisher\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"3",children:["\n",(0,l.jsx)(e.li,{children:"Check plugin compatibility"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-groovy",children:"// Check if plugin is available\nif (Jenkins.instance.pluginManager.getPlugin('html-publisher')) {\n    publishHTML([...])\n} else {\n    echo 'HTML Publisher plugin not available'\n}\n"})}),"\n",(0,l.jsx)(e.h2,{id:"gitlab-ci-issues",children:"GitLab CI Issues"}),"\n",(0,l.jsx)(e.h3,{id:"runner-problems",children:"Runner Problems"}),"\n",(0,l.jsx)(e.h4,{id:"no-runners-available",children:"No Runners Available"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# .gitlab-ci.yml\ntest:\n  script:\n    - npm test\n  tags:\n    - nonexistent-tag # No runners with this tag\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Use shared runners\ntest:\n  script:\n    - npm test\n  # Remove tags to use shared runners\n\n# Or use specific runner tags\ntest:\n  script:\n    - npm test\n  tags:\n    - docker\n    - linux\n\n# Check available runners in GitLab UI\n# Settings \u2192 CI/CD \u2192 Runners\n"})}),"\n",(0,l.jsx)(e.h4,{id:"runner-configuration-issues",children:"Runner Configuration Issues"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Docker-in-Docker issues\nbuild:\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t myapp . # May fail without proper setup\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# Proper Docker-in-Docker setup\nbuild:\n  image: docker:latest\n  services:\n    - docker:dind\n  variables:\n    DOCKER_HOST: tcp://docker:2376\n    DOCKER_TLS_CERTDIR: "/certs"\n  before_script:\n    - docker info\n  script:\n    - docker build -t myapp .\n'})}),"\n",(0,l.jsx)(e.h3,{id:"cache-and-artifacts-issues",children:"Cache and Artifacts Issues"}),"\n",(0,l.jsx)(e.h4,{id:"cache-not-working",children:"Cache Not Working"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Cache configuration issues\ntest:\n  cache:\n    paths:\n      - node_modules/ # May not be restored properly\n  script:\n    - npm install\n    - npm test\n"})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Proper cache configuration\ntest:\n  cache:\n    key: ${CI_COMMIT_REF_SLUG}\n    paths:\n      - node_modules/\n    policy: pull-push\n  before_script:\n    - npm ci --cache .npm --prefer-offline\n  script:\n    - npm test\n  artifacts:\n    paths:\n      - coverage/\n    reports:\n      coverage_report:\n        coverage_format: cobertura\n        path: coverage/cobertura-coverage.xml\n"})}),"\n",(0,l.jsx)(e.h2,{id:"general-cicd-debugging",children:"General CI/CD Debugging"}),"\n",(0,l.jsx)(e.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,l.jsx)(e.h4,{id:"slow-build-times",children:"Slow Build Times"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Optimization Strategies:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# Use caching effectively\n- name: Cache dependencies\n  uses: actions/cache@v3\n  with:\n    path: |\n      ~/.npm\n      ~/.cache/pip\n      ~/.m2/repository\n    key: ${{ runner.os }}-deps-${{ hashFiles(\'**/package-lock.json\', \'**/requirements.txt\', \'**/pom.xml\') }}\n\n# Parallel job execution\nstrategy:\n  matrix:\n    include:\n      - name: "Unit Tests"\n        command: "npm run test:unit"\n      - name: "Integration Tests"\n        command: "npm run test:integration"\n      - name: "E2E Tests"\n        command: "npm run test:e2e"\n\n# Use faster runners\nruns-on: ubuntu-latest  # Generally faster than other options\n'})}),"\n",(0,l.jsx)(e.h4,{id:"resource-constraints",children:"Resource Constraints"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# Monitor resource usage\n- name: Monitor resources\n  run: |\n    echo "Disk usage:"\n    df -h\n    echo "Memory usage:"\n    free -h\n    echo "CPU info:"\n    nproc\n'})}),"\n",(0,l.jsx)(e.h3,{id:"security-issues",children:"Security Issues"}),"\n",(0,l.jsx)(e.h4,{id:"exposed-secrets",children:"Exposed Secrets"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:'# Check for accidentally committed secrets\ngit log --grep="password\\|secret\\|key" --oneline\n\n# Use secret scanning tools\nnpm audit\nsafety check  # Python\nsnyk test\n'})}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Prevention:"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Use environment-specific secrets\n- name: Deploy to staging\n  if: github.ref == 'refs/heads/develop'\n  env:\n    API_KEY: ${{ secrets.STAGING_API_KEY }}\n  run: deploy-staging.sh\n\n- name: Deploy to production\n  if: github.ref == 'refs/heads/main'\n  env:\n    API_KEY: ${{ secrets.PRODUCTION_API_KEY }}\n  run: deploy-production.sh\n"})}),"\n",(0,l.jsx)(e.h3,{id:"monitoring-and-debugging",children:"Monitoring and Debugging"}),"\n",(0,l.jsx)(e.h4,{id:"enable-debug-logging",children:"Enable Debug Logging"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:'# GitHub Actions\n- name: Enable debug logging\n  run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV\n\n# GitLab CI\nvariables:\n  CI_DEBUG_TRACE: "true"\n\n# Jenkins\n// Enable debug in pipeline\npipeline {\n    options {\n        timestamps()\n        timeout(time: 1, unit: \'HOURS\')\n    }\n    // ...\n}\n'})}),"\n",(0,l.jsx)(e.h4,{id:"troubleshooting-steps",children:"Troubleshooting Steps"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Check workflow/pipeline status"})," in UI"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Review logs"})," for error messages"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Verify configuration"})," files"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Test locally"})," with same commands"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Check resource availability"})," (agents, secrets, permissions)"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Validate dependencies"})," and versions"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Monitor resource usage"})," (CPU, memory, disk)"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"common-anti-patterns",children:"Common Anti-patterns"}),"\n",(0,l.jsx)(e.h4,{id:"dont-do-this",children:"Don't Do This"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Hardcoded values\n- name: Deploy\n  run: |\n    ssh user@192.168.1.100 'cd /app && git pull'  # Hardcoded IP\n\n# No error handling\n- name: Deploy\n  run: |\n    ./deploy.sh\n    # No check if deployment succeeded\n\n# Overly complex single job\n- name: Everything\n  run: |\n    npm install\n    npm test\n    npm run build\n    docker build -t app .\n    docker push app\n    kubectl apply -f k8s/\n    # Should be separate jobs\n"})}),"\n",(0,l.jsx)(e.h4,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-yaml",children:"# Use environment variables\n- name: Deploy\n  env:\n    DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}\n    DEPLOY_USER: ${{ secrets.DEPLOY_USER }}\n  run: |\n    ssh $DEPLOY_USER@$DEPLOY_HOST 'cd /app && git pull'\n\n# Proper error handling\n- name: Deploy\n  run: |\n    if ./deploy.sh; then\n      echo \"Deployment successful\"\n    else\n      echo \"Deployment failed\"\n      exit 1\n    fi\n\n# Separate concerns into different jobs\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Run tests\n        run: npm test\n\n  build:\n    needs: test\n    runs-on: ubuntu-latest\n    steps:\n      - name: Build application\n        run: npm run build\n\n  deploy:\n    needs: build\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    steps:\n      - name: Deploy to production\n        run: ./deploy.sh\n"})}),"\n",(0,l.jsx)(e.h3,{id:"emergency-procedures",children:"Emergency Procedures"}),"\n",(0,l.jsx)(e.h4,{id:"rollback-strategies",children:"Rollback Strategies"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-bash",children:"# GitHub Actions - revert commit\ngit revert HEAD~1\ngit push origin main\n\n# Manual rollback with tags\ngit tag -l | grep release\ngit checkout tags/v1.2.3\ngit checkout -b hotfix/rollback-v1.2.4\n# Make minimal fixes\ngit tag v1.2.5\ngit push origin v1.2.5\n\n# Container rollback\ndocker pull myapp:previous-version\ndocker stop myapp\ndocker run -d --name myapp myapp:previous-version\n"})}),"\n",(0,l.jsx)(e.h4,{id:"when-to-contact-support",children:"When to Contact Support"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Pipeline has been failing for >30 minutes"}),"\n",(0,l.jsx)(e.li,{children:"Security incident detected"}),"\n",(0,l.jsx)(e.li,{children:"Unable to deploy critical hotfix"}),"\n",(0,l.jsx)(e.li,{children:"Resource constraints affecting multiple pipelines"}),"\n",(0,l.jsx)(e.li,{children:"Suspected platform issues (GitHub/GitLab/Jenkins down)"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>a});var i=s(6540);const l={},r=i.createContext(l);function t(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:t(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);