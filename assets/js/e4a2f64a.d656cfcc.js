"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[7944],{2025:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"architecture-and-patterns/architectural-styles","title":"Architectural Styles","description":"This file explores different architectural styles and their applications in modern software development.","source":"@site/docs/architecture-and-patterns/architectural-styles.md","sourceDirName":"architecture-and-patterns","slug":"/architecture-and-patterns/architectural-styles","permalink":"/documentation-docs-markdown/docs/architecture-and-patterns/architectural-styles","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/architecture-and-patterns/architectural-styles.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture and Patterns","permalink":"/documentation-docs-markdown/docs/category/architecture-and-patterns"},"next":{"title":"Design Patterns in Python","permalink":"/documentation-docs-markdown/docs/architecture-and-patterns/design-patterns-in-python"}}');var s=i(4848),t=i(8453);const l={},c="Architectural Styles",a={},d=[{value:"Monolithic Architecture",id:"monolithic-architecture",level:2},{value:"Overview",id:"overview",level:3},{value:"Characteristics",id:"characteristics",level:3},{value:"Example Structure",id:"example-structure",level:3},{value:"Advantages",id:"advantages",level:3},{value:"Disadvantages",id:"disadvantages",level:3},{value:"When to Use",id:"when-to-use",level:3},{value:"Microservices Architecture",id:"microservices-architecture",level:2},{value:"Overview",id:"overview-1",level:3},{value:"Characteristics",id:"characteristics-1",level:3},{value:"Example Structure",id:"example-structure-1",level:3},{value:"Service Communication Patterns",id:"service-communication-patterns",level:3},{value:"Advantages",id:"advantages-1",level:3},{value:"Disadvantages",id:"disadvantages-1",level:3},{value:"When to Use",id:"when-to-use-1",level:3},{value:"Service-Oriented Architecture (SOA)",id:"service-oriented-architecture-soa",level:2},{value:"Overview",id:"overview-2",level:3},{value:"Characteristics",id:"characteristics-2",level:3},{value:"SOA vs Microservices",id:"soa-vs-microservices",level:3},{value:"Serverless Architecture",id:"serverless-architecture",level:2},{value:"Overview",id:"overview-3",level:3},{value:"Characteristics",id:"characteristics-3",level:3},{value:"Advantages",id:"advantages-2",level:3},{value:"Disadvantages",id:"disadvantages-2",level:3},{value:"Event-Driven Architecture",id:"event-driven-architecture",level:2},{value:"Overview",id:"overview-4",level:3},{value:"Components",id:"components",level:3},{value:"Implementation Patterns",id:"implementation-patterns",level:3},{value:"CQRS (Command Query Responsibility Segregation)",id:"cqrs-command-query-responsibility-segregation",level:4},{value:"Layered Architecture",id:"layered-architecture",level:2},{value:"Overview",id:"overview-5",level:3},{value:"Common Layers",id:"common-layers",level:3},{value:"Hexagonal Architecture (Ports and Adapters)",id:"hexagonal-architecture-ports-and-adapters",level:2},{value:"Overview",id:"overview-6",level:3},{value:"Components",id:"components-1",level:3},{value:"Choosing the Right Architecture",id:"choosing-the-right-architecture",level:2},{value:"Decision Matrix",id:"decision-matrix",level:3},{value:"Guidelines",id:"guidelines",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"architectural-styles",children:"Architectural Styles"})}),"\n",(0,s.jsx)(n.p,{children:"This file explores different architectural styles and their applications in modern software development."}),"\n",(0,s.jsx)(n.h2,{id:"monolithic-architecture",children:"Monolithic Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"A monolithic architecture deploys all application components as a single deployable unit."}),"\n",(0,s.jsx)(n.h3,{id:"characteristics",children:"Characteristics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Single deployable artifact"}),"\n",(0,s.jsx)(n.li,{children:"Shared database"}),"\n",(0,s.jsx)(n.li,{children:"Centralized business logic"}),"\n",(0,s.jsx)(n.li,{children:"Direct in-process communication"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-structure",children:"Example Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"monolithic-app/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 controllers/\n\u2502   \u2502   \u251c\u2500\u2500 UserController.java\n\u2502   \u2502   \u251c\u2500\u2500 OrderController.java\n\u2502   \u2502   \u2514\u2500\u2500 ProductController.java\n\u2502   \u251c\u2500\u2500 services/\n\u2502   \u2502   \u251c\u2500\u2500 UserService.java\n\u2502   \u2502   \u251c\u2500\u2500 OrderService.java\n\u2502   \u2502   \u2514\u2500\u2500 ProductService.java\n\u2502   \u251c\u2500\u2500 repositories/\n\u2502   \u2502   \u251c\u2500\u2500 UserRepository.java\n\u2502   \u2502   \u251c\u2500\u2500 OrderRepository.java\n\u2502   \u2502   \u2514\u2500\u2500 ProductRepository.java\n\u2502   \u2514\u2500\u2500 models/\n\u2502       \u251c\u2500\u2500 User.java\n\u2502       \u251c\u2500\u2500 Order.java\n\u2502       \u2514\u2500\u2500 Product.java\n\u251c\u2500\u2500 database/\n\u2502   \u2514\u2500\u2500 schema.sql\n\u2514\u2500\u2500 config/\n    \u2514\u2500\u2500 application.properties\n"})}),"\n",(0,s.jsx)(n.h3,{id:"advantages",children:"Advantages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Simple deployment"}),": Single artifact to deploy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Easy testing"}),": Everything runs in one process"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Simple debugging"}),": All code in one place"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No network latency"}),": Direct method calls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ACID transactions"}),": Easy to maintain consistency"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"disadvantages",children:"Disadvantages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Technology lock-in"}),": Entire app uses same stack"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scaling limitations"}),": Must scale entire application"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Development bottlenecks"}),": Large teams working on same codebase"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fault tolerance"}),": Single point of failure"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deployment risk"}),": Changes affect entire system"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"when-to-use",children:"When to Use"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Small to medium applications"}),"\n",(0,s.jsx)(n.li,{children:"Simple business domains"}),"\n",(0,s.jsx)(n.li,{children:"Small development teams"}),"\n",(0,s.jsx)(n.li,{children:"Rapid prototyping"}),"\n",(0,s.jsx)(n.li,{children:"Applications with strong consistency requirements"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"microservices-architecture",children:"Microservices Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"overview-1",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Microservices architecture structures an application as a collection of loosely coupled, independently deployable services."}),"\n",(0,s.jsx)(n.h3,{id:"characteristics-1",children:"Characteristics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Service per business capability"}),"\n",(0,s.jsx)(n.li,{children:"Decentralized governance"}),"\n",(0,s.jsx)(n.li,{children:"Independent deployment"}),"\n",(0,s.jsx)(n.li,{children:"Technology diversity"}),"\n",(0,s.jsx)(n.li,{children:"Failure isolation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-structure-1",children:"Example Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"microservices-ecommerce/\n\u251c\u2500\u2500 user-service/\n\u2502   \u251c\u2500\u2500 src/main/java/\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 k8s/\n\u251c\u2500\u2500 order-service/\n\u2502   \u251c\u2500\u2500 src/main/java/\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 k8s/\n\u251c\u2500\u2500 product-service/\n\u2502   \u251c\u2500\u2500 src/main/java/\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 k8s/\n\u251c\u2500\u2500 notification-service/\n\u2502   \u251c\u2500\u2500 src/main/java/\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 k8s/\n\u251c\u2500\u2500 api-gateway/\n\u2502   \u251c\u2500\u2500 src/main/java/\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 k8s/\n\u2514\u2500\u2500 docker-compose.yml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"service-communication-patterns",children:"Service Communication Patterns"}),"\n",(0,s.jsx)(n.h3,{id:"advantages-1",children:"Advantages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Technology diversity"}),": Each service can use different technologies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Independent scaling"}),": Scale services independently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fault isolation"}),": Failure in one service doesn't bring down others"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Team autonomy"}),": Teams can work independently"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Faster deployment"}),": Deploy services independently"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"disadvantages-1",children:"Disadvantages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Distributed system complexity"}),": Network calls, latency, failures"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data consistency"}),": Managing transactions across services"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testing complexity"}),": Integration testing is harder"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Operational overhead"}),": More services to monitor and maintain"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Development overhead"}),": Service discovery, configuration management"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"when-to-use-1",children:"When to Use"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Large, complex applications"}),"\n",(0,s.jsx)(n.li,{children:"Multiple development teams"}),"\n",(0,s.jsx)(n.li,{children:"Different scaling requirements per component"}),"\n",(0,s.jsx)(n.li,{children:"Need for technology diversity"}),"\n",(0,s.jsx)(n.li,{children:"Organizations with DevOps maturity"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"service-oriented-architecture-soa",children:"Service-Oriented Architecture (SOA)"}),"\n",(0,s.jsx)(n.h3,{id:"overview-2",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"SOA is an architectural pattern where application components provide services through well-defined interfaces."}),"\n",(0,s.jsx)(n.h3,{id:"characteristics-2",children:"Characteristics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Service contracts and interfaces"}),"\n",(0,s.jsx)(n.li,{children:"Service registry and discovery"}),"\n",(0,s.jsx)(n.li,{children:"Loose coupling"}),"\n",(0,s.jsx)(n.li,{children:"Service composition"}),"\n",(0,s.jsx)(n.li,{children:"Platform independence"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"soa-vs-microservices",children:"SOA vs Microservices"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Aspect"}),(0,s.jsx)(n.th,{children:"SOA"}),(0,s.jsx)(n.th,{children:"Microservices"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Service Size"}),(0,s.jsx)(n.td,{children:"Larger services"}),(0,s.jsx)(n.td,{children:"Small, focused services"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Communication"}),(0,s.jsx)(n.td,{children:"SOAP, ESB"}),(0,s.jsx)(n.td,{children:"HTTP/REST, messaging"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Data Sharing"}),(0,s.jsx)(n.td,{children:"Shared databases"}),(0,s.jsx)(n.td,{children:"Database per service"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Governance"}),(0,s.jsx)(n.td,{children:"Centralized"}),(0,s.jsx)(n.td,{children:"Decentralized"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"serverless-architecture",children:"Serverless Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"overview-3",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Serverless architecture runs applications in stateless compute containers managed by cloud providers."}),"\n",(0,s.jsx)(n.h3,{id:"characteristics-3",children:"Characteristics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"No server management"}),"\n",(0,s.jsx)(n.li,{children:"Event-driven execution"}),"\n",(0,s.jsx)(n.li,{children:"Automatic scaling"}),"\n",(0,s.jsx)(n.li,{children:"Pay-per-execution"}),"\n",(0,s.jsx)(n.li,{children:"Stateless functions"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"advantages-2",children:"Advantages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No infrastructure management"}),": Focus on business logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Automatic scaling"}),": Scales with demand"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cost effective"}),": Pay only for execution time"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"High availability"}),": Built-in fault tolerance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fast deployment"}),": Quick to deploy functions"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"disadvantages-2",children:"Disadvantages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cold start latency"}),": Initial execution delay"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Execution limits"}),": Time and memory constraints"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Vendor lock-in"}),": Platform-specific implementations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Limited local testing"}),": Hard to replicate cloud environment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Debugging complexity"}),": Distributed logging and monitoring"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"event-driven-architecture",children:"Event-Driven Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"overview-4",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Event-driven architecture uses events to trigger and communicate between decoupled services."}),"\n",(0,s.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Producers"}),": Generate events"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Routers"}),": Route events to consumers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Consumers"}),": Process events"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Store"}),": Persist events"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"implementation-patterns",children:"Implementation Patterns"}),"\n",(0,s.jsx)(n.h4,{id:"cqrs-command-query-responsibility-segregation",children:"CQRS (Command Query Responsibility Segregation)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Command side\npublic interface Command {\n}\n\npublic class CreateUserCommand implements Command {\n    private final String email;\n    private final String firstName;\n    private final String lastName;\n\n    // Constructor and getters\n}\n\n@Service\npublic class UserCommandHandler {\n    private final UserEventStore eventStore;\n\n    public void handle(CreateUserCommand command) {\n        String userId = UUID.randomUUID().toString();\n\n        UserCreatedEvent event = new UserCreatedEvent(\n            userId,\n            command.getEmail(),\n            command.getFirstName(),\n            command.getLastName()\n        );\n\n        eventStore.saveEvent(userId, event);\n    }\n}\n\n// Query side\n@Entity\n@Table(name = "user_view")\npublic class UserView {\n    @Id\n    private String id;\n    private String email;\n    private String fullName;\n    private LocalDateTime createdAt;\n    private LocalDateTime updatedAt;\n\n    // Constructors, getters, setters\n}\n\n@Service\npublic class UserQueryHandler {\n    private final UserViewRepository repository;\n\n    @EventListener\n    public void on(UserCreatedEvent event) {\n        UserView view = new UserView();\n        view.setId(event.getUserId());\n        view.setEmail(event.getEmail());\n        view.setFullName(event.getFirstName() + " " + event.getLastName());\n        view.setCreatedAt(event.getOccurredOn());\n        view.setUpdatedAt(event.getOccurredOn());\n\n        repository.save(view);\n    }\n\n    @EventListener\n    public void on(UserEmailChangedEvent event) {\n        UserView view = repository.findById(event.getUserId())\n            .orElseThrow(() -> new IllegalStateException("User view not found"));\n\n        view.setEmail(event.getNewEmail());\n        view.setUpdatedAt(event.getOccurredOn());\n\n        repository.save(view);\n    }\n\n    public Optional<UserView> findById(String id) {\n        return repository.findById(id);\n    }\n\n    public List<UserView> findByEmail(String email) {\n        return repository.findByEmailContaining(email);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"layered-architecture",children:"Layered Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"overview-5",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Layered architecture organizes code into horizontal layers with each layer only communicating with the layer directly below it."}),"\n",(0,s.jsx)(n.h3,{id:"common-layers",children:"Common Layers"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Presentation Layer"}),": UI, Controllers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Business/Service Layer"}),": Business logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Persistence Layer"}),": Data access"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database Layer"}),": Data storage"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"hexagonal-architecture-ports-and-adapters",children:"Hexagonal Architecture (Ports and Adapters)"}),"\n",(0,s.jsx)(n.h3,{id:"overview-6",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Hexagonal architecture isolates the core business logic from external concerns using ports and adapters."}),"\n",(0,s.jsx)(n.h3,{id:"components-1",children:"Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Domain"}),": Core business logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ports"}),": Interfaces for communication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Adapters"}),": Implementations of ports"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"choosing-the-right-architecture",children:"Choosing the Right Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"decision-matrix",children:"Decision Matrix"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Architecture"}),(0,s.jsx)(n.th,{children:"Team Size"}),(0,s.jsx)(n.th,{children:"Complexity"}),(0,s.jsx)(n.th,{children:"Scalability"}),(0,s.jsx)(n.th,{children:"Technology Diversity"}),(0,s.jsx)(n.th,{children:"Operational Complexity"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Monolithic"}),(0,s.jsx)(n.td,{children:"Small"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Limited"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Low"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Modular Monolith"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Low"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Microservices"}),(0,s.jsx)(n.td,{children:"Large"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Serverless"}),(0,s.jsx)(n.td,{children:"Variable"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"guidelines",children:"Guidelines"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Start Simple"}),": Begin with monolithic architecture"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Evolve Gradually"}),": Extract services when clear boundaries emerge"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consider Team Structure"}),": Conway's Law applies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Evaluate Operational Capability"}),": Can you manage distributed systems?"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Business Requirements"}),": Does your domain benefit from service boundaries?"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Each architectural style has its place. Choose based on your specific context, team capabilities, and business requirements rather than following trends."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);