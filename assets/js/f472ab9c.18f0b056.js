"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[1743],{7513:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"projects/templates/template-api-python","title":"Template API Python","description":"This file documents the Python API template project structure and best practices.","source":"@site/docs/projects/templates/template-api-python.md","sourceDirName":"projects/templates","slug":"/projects/templates/template-api-python","permalink":"/documentation-docs-markdown/docs/projects/templates/template-api-python","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/projects/templates/template-api-python.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"POC Ingestion Java","permalink":"/documentation-docs-markdown/docs/projects/proof-of-concepts/poc-ingestion-java"},"next":{"title":"Template Spring Boot Java","permalink":"/documentation-docs-markdown/docs/projects/templates/template-springboot-java"}}');var s=t(4848),r=t(8453);const l={},a="Template API Python",o={},c=[{value:"Project Overview",id:"project-overview",level:2},{value:"Tech Stack",id:"tech-stack",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Authentication &amp; Authorization",id:"authentication--authorization",level:3},{value:"Database Integration",id:"database-integration",level:3},{value:"API Documentation",id:"api-documentation",level:3},{value:"Development Tools",id:"development-tools",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:3},{value:"Docker Setup",id:"docker-setup",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Creating a User",id:"creating-a-user",level:3},{value:"API Endpoints",id:"api-endpoints",level:3},{value:"Testing",id:"testing",level:2},{value:"Deployment",id:"deployment",level:2},{value:"Environment Configuration",id:"environment-configuration",level:3},{value:"CI/CD Pipeline",id:"cicd-pipeline",level:3},{value:"Contributing",id:"contributing",level:2},{value:"Best Practices Implemented",id:"best-practices-implemented",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"template-api-python",children:"Template API Python"})}),"\n",(0,s.jsx)(n.p,{children:"This file documents the Python API template project structure and best practices."}),"\n",(0,s.jsx)(n.h2,{id:"project-overview",children:"Project Overview"}),"\n",(0,s.jsx)(n.p,{children:"The Template API Python is a FastAPI-based starter template designed to accelerate the development of modern Python APIs. It includes best practices, common patterns, and essential configurations."}),"\n",(0,s.jsx)(n.h2,{id:"tech-stack",children:"Tech Stack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Framework"}),": FastAPI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database"}),": PostgreSQL with SQLAlchemy ORM"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": JWT with OAuth2"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),": Automatic OpenAPI/Swagger"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testing"}),": pytest with test coverage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Containerization"}),": Docker with multi-stage builds"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"template-api-python/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u2502   \u251c\u2500\u2500 v1/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 endpoints/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 dependencies.py\n\u2502   \u2502   \u2514\u2500\u2500 routes.py\n\u2502   \u251c\u2500\u2500 core/\n\u2502   \u2502   \u251c\u2500\u2500 config.py\n\u2502   \u2502   \u251c\u2500\u2500 security.py\n\u2502   \u2502   \u2514\u2500\u2500 database.py\n\u2502   \u251c\u2500\u2500 models/\n\u2502   \u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2502   \u2514\u2500\u2500 base.py\n\u2502   \u251c\u2500\u2500 schemas/\n\u2502   \u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2502   \u2514\u2500\u2500 token.py\n\u2502   \u251c\u2500\u2500 services/\n\u2502   \u2502   \u2514\u2500\u2500 user_service.py\n\u2502   \u2514\u2500\u2500 main.py\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u251c\u2500\u2500 services/\n\u2502   \u2514\u2500\u2500 conftest.py\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 README.md\n"})}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsx)(n.h3,{id:"authentication--authorization",children:"Authentication & Authorization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JWT token-based authentication"}),"\n",(0,s.jsx)(n.li,{children:"Role-based access control"}),"\n",(0,s.jsx)(n.li,{children:"Password hashing with bcrypt"}),"\n",(0,s.jsx)(n.li,{children:"OAuth2 with scopes"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"database-integration",children:"Database Integration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SQLAlchemy ORM with Alembic migrations"}),"\n",(0,s.jsx)(n.li,{children:"Repository pattern implementation"}),"\n",(0,s.jsx)(n.li,{children:"Connection pooling"}),"\n",(0,s.jsx)(n.li,{children:"Database health checks"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"api-documentation",children:"API Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatic OpenAPI schema generation"}),"\n",(0,s.jsx)(n.li,{children:"Interactive Swagger UI"}),"\n",(0,s.jsx)(n.li,{children:"ReDoc documentation"}),"\n",(0,s.jsx)(n.li,{children:"API versioning support"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"development-tools",children:"Development Tools"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Hot reload for development"}),"\n",(0,s.jsx)(n.li,{children:"Pre-commit hooks"}),"\n",(0,s.jsx)(n.li,{children:"Code formatting with Black"}),"\n",(0,s.jsx)(n.li,{children:"Linting with flake8"}),"\n",(0,s.jsx)(n.li,{children:"Type checking with mypy"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Python 3.9+"}),"\n",(0,s.jsx)(n.li,{children:"PostgreSQL"}),"\n",(0,s.jsx)(n.li,{children:"Docker (optional)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone the template\ngit clone https://github.com/EndToEndLabCR/template-api-python\ncd template-api-python\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Set up environment variables\ncp .env.example .env\n# Edit .env with your configuration\n\n# Run database migrations\nalembic upgrade head\n\n# Start development server\nuvicorn app.main:app --reload\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-setup",children:"Docker Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Build and run with Docker Compose\ndocker-compose up --build\n\n# API will be available at http://localhost:8000\n# Documentation at http://localhost:8000/docs\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-user",children:"Creating a User"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from app.schemas.user import UserCreate\nfrom app.services.user_service import UserService\n\nuser_data = UserCreate(\n    email="user@example.com",\n    password="securepassword",\n    full_name="John Doe"\n)\n\nuser = await UserService.create_user(user_data)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Health check\nGET /health\n\n# Authentication\nPOST /auth/login\nPOST /auth/register\nPOST /auth/refresh\n\n# Users\nGET /api/v1/users/\nGET /api/v1/users/{user_id}\nPUT /api/v1/users/{user_id}\nDELETE /api/v1/users/{user_id}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Run all tests\npytest\n\n# Run with coverage\npytest --cov=app\n\n# Run specific test file\npytest tests/api/test_users.py\n"})}),"\n",(0,s.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,s.jsx)(n.h3,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Development: ",(0,s.jsx)(n.code,{children:".env.dev"})]}),"\n",(0,s.jsxs)(n.li,{children:["Staging: ",(0,s.jsx)(n.code,{children:".env.staging"})]}),"\n",(0,s.jsxs)(n.li,{children:["Production: ",(0,s.jsx)(n.code,{children:".env.prod"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"cicd-pipeline",children:"CI/CD Pipeline"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"GitHub Actions for automated testing"}),"\n",(0,s.jsx)(n.li,{children:"Docker image building and pushing"}),"\n",(0,s.jsx)(n.li,{children:"Automated deployment to staging/production"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Fork the repository"}),"\n",(0,s.jsx)(n.li,{children:"Create a feature branch"}),"\n",(0,s.jsx)(n.li,{children:"Make your changes"}),"\n",(0,s.jsx)(n.li,{children:"Add tests for new functionality"}),"\n",(0,s.jsx)(n.li,{children:"Ensure all tests pass"}),"\n",(0,s.jsx)(n.li,{children:"Submit a pull request"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices-implemented",children:"Best Practices Implemented"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clean architecture principles"}),"\n",(0,s.jsx)(n.li,{children:"Dependency injection"}),"\n",(0,s.jsx)(n.li,{children:"Error handling and logging"}),"\n",(0,s.jsx)(n.li,{children:"API rate limiting"}),"\n",(0,s.jsx)(n.li,{children:"Request validation"}),"\n",(0,s.jsx)(n.li,{children:"Response serialization"}),"\n",(0,s.jsx)(n.li,{children:"Database connection management"}),"\n",(0,s.jsx)(n.li,{children:"Security headers and CORS"}),"\n",(0,s.jsx)(n.li,{children:"Health checks and monitoring"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);