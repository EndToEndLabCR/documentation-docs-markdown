"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[6941],{1146:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"organizational-best-practices/code-comments-and-docstrings","title":"Code Comments and Docstrings","description":"This file provides guidelines for writing effective comments and documentation in code.","source":"@site/docs/organizational-best-practices/code-comments-and-docstrings.md","sourceDirName":"organizational-best-practices","slug":"/organizational-best-practices/code-comments-and-docstrings","permalink":"/documentation-docs-markdown/docs/organizational-best-practices/code-comments-and-docstrings","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/organizational-best-practices/code-comments-and-docstrings.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CI/CD Pipelines","permalink":"/documentation-docs-markdown/docs/organizational-best-practices/ci-cd-pipelines"},"next":{"title":"Coding Guidelines","permalink":"/documentation-docs-markdown/docs/organizational-best-practices/coding-guidelines"}}');var i=s(4848),o=s(8453);const a={},r="Code Comments and Docstrings",c={},d=[{value:"When to Comment",id:"when-to-comment",level:2},{value:"Good Reasons to Comment",id:"good-reasons-to-comment",level:3},{value:"Avoid Commenting",id:"avoid-commenting",level:3},{value:"Comment Types",id:"comment-types",level:2},{value:"Inline Comments",id:"inline-comments",level:3},{value:"Block Comments",id:"block-comments",level:3},{value:"Docstring Standards",id:"docstring-standards",level:2},{value:"Python (Google Style)",id:"python-google-style",level:3},{value:"JavaScript (JSDoc)",id:"javascript-jsdoc",level:3},{value:"API Documentation",id:"api-documentation",level:2},{value:"REST API Endpoints",id:"rest-api-endpoints",level:3},{value:"TODO and FIXME Comments",id:"todo-and-fixme-comments",level:2},{value:"Documentation Maintenance",id:"documentation-maintenance",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"code-comments-and-docstrings",children:"Code Comments and Docstrings"})}),"\n",(0,i.jsx)(n.p,{children:"This file provides guidelines for writing effective comments and documentation in code."}),"\n",(0,i.jsx)(n.h2,{id:"when-to-comment",children:"When to Comment"}),"\n",(0,i.jsx)(n.h3,{id:"good-reasons-to-comment",children:"Good Reasons to Comment"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complex business logic"}),"\n",(0,i.jsx)(n.li,{children:"Non-obvious algorithms"}),"\n",(0,i.jsx)(n.li,{children:"API documentation"}),"\n",(0,i.jsx)(n.li,{children:"Configuration explanations"}),"\n",(0,i.jsx)(n.li,{children:"Temporary workarounds (with TODO/FIXME)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"avoid-commenting",children:"Avoid Commenting"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Obvious code behavior"}),"\n",(0,i.jsx)(n.li,{children:"Redundant information"}),"\n",(0,i.jsx)(n.li,{children:"Out-of-date information"}),"\n",(0,i.jsx)(n.li,{children:"Bad code (refactor instead)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"comment-types",children:"Comment Types"}),"\n",(0,i.jsx)(n.h3,{id:"inline-comments",children:"Inline Comments"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Good: Explains why\nuser_score = base_score * 1.15  # Apply 15% bonus for premium users\n\n# Avoid: States the obvious\nuser_score = base_score * 1.15  # Multiply base_score by 1.15\n"})}),"\n",(0,i.jsx)(n.h3,{id:"block-comments",children:"Block Comments"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'"""\nCalculate the optimal batch size for processing items.\n\nUses a heuristic based on available memory and item complexity.\nLarger batches improve throughput but may cause memory issues.\n"""\ndef calculate_batch_size(items, available_memory):\n    # Implementation here\n    pass\n'})}),"\n",(0,i.jsx)(n.h2,{id:"docstring-standards",children:"Docstring Standards"}),"\n",(0,i.jsx)(n.h3,{id:"python-google-style",children:"Python (Google Style)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def fetch_user_data(user_id: int, include_permissions: bool = False) -> dict:\n    \"\"\"Fetches user data from the database.\n\n    Args:\n        user_id: The unique identifier for the user.\n        include_permissions: Whether to include user permissions in the result.\n\n    Returns:\n        A dictionary containing user information with the following keys:\n        - id: User ID\n        - name: User's full name\n        - email: User's email address\n        - permissions: List of permissions (if include_permissions is True)\n\n    Raises:\n        UserNotFoundError: If the user with the given ID doesn't exist.\n        DatabaseError: If there's an issue with the database connection.\n\n    Example:\n        >>> user = fetch_user_data(123, include_permissions=True)\n        >>> print(user['name'])\n        'John Doe'\n    \"\"\"\n    pass\n"})}),"\n",(0,i.jsx)(n.h3,{id:"javascript-jsdoc",children:"JavaScript (JSDoc)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"/**\n * Calculates the total price including tax and discounts.\n *\n * @param {number} basePrice - The base price before tax and discounts\n * @param {number} taxRate - The tax rate as a decimal (e.g., 0.08 for 8%)\n * @param {number} [discountPercent=0] - The discount percentage (0-100)\n * @returns {number} The final price after tax and discounts\n *\n * @example\n * // Calculate price with 8% tax and 10% discount\n * const total = calculateTotal(100, 0.08, 10);\n * console.log(total); // 97.2\n */\nfunction calculateTotal(basePrice, taxRate, discountPercent = 0) {\n  // Implementation here\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api-documentation",children:"API Documentation"}),"\n",(0,i.jsx)(n.h3,{id:"rest-api-endpoints",children:"REST API Endpoints"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.post("/users")\nasync def create_user(user_data: UserCreate) -> UserResponse:\n    """Create a new user account.\n\n    Creates a new user with the provided information. The email address\n    must be unique across all users.\n\n    Args:\n        user_data: User creation data including name, email, and password\n\n    Returns:\n        UserResponse: Created user information (excluding password)\n\n    Raises:\n        HTTPException 400: If email already exists or validation fails\n        HTTPException 500: If there\'s a server error during creation\n    """\n    pass\n'})}),"\n",(0,i.jsx)(n.h2,{id:"todo-and-fixme-comments",children:"TODO and FIXME Comments"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# TODO: Implement caching for better performance\n# FIXME: This method has a memory leak with large datasets\n# HACK: Temporary workaround for API limitation\n# NOTE: This behavior is required by legacy system\n"})}),"\n",(0,i.jsx)(n.h2,{id:"documentation-maintenance",children:"Documentation Maintenance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Review comments during code reviews"}),"\n",(0,i.jsx)(n.li,{children:"Update documentation when code changes"}),"\n",(0,i.jsx)(n.li,{children:"Remove outdated comments"}),"\n",(0,i.jsx)(n.li,{children:"Use automated tools to check documentation coverage"}),"\n",(0,i.jsx)(n.li,{children:"Link to external documentation when appropriate"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);