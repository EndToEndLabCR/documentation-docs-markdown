"use strict";(globalThis.webpackChunkdocumentation_docs_markdown=globalThis.webpackChunkdocumentation_docs_markdown||[]).push([[5975],{4125:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"organizational-best-practices/security-best-practices","title":"Security Best Practices","description":"This file outlines essential security practices for protecting applications, data, and infrastructure.","source":"@site/docs/organizational-best-practices/security-best-practices.md","sourceDirName":"organizational-best-practices","slug":"/organizational-best-practices/security-best-practices","permalink":"/documentation-docs-markdown/docs/organizational-best-practices/security-best-practices","draft":false,"unlisted":false,"editUrl":"https://github.com/EndToEndLabCR/docs/organizational-best-practices/security-best-practices.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Project Architecture","permalink":"/documentation-docs-markdown/docs/organizational-best-practices/project-architecture"},"next":{"title":"FAQ and Troubleshooting","permalink":"/documentation-docs-markdown/docs/category/faq-and-troubleshooting"}}');var r=t(4848),s=t(8453);const a={},c="Security Best Practices",l={},o=[{value:"Application Security",id:"application-security",level:2},{value:"Input Validation",id:"input-validation",level:3},{value:"SQL Injection Prevention",id:"sql-injection-prevention",level:3},{value:"Cross-Site Scripting (XSS) Prevention",id:"cross-site-scripting-xss-prevention",level:3},{value:"Authentication and Authorization",id:"authentication-and-authorization",level:2},{value:"Password Security",id:"password-security",level:3},{value:"JWT Best Practices",id:"jwt-best-practices",level:3},{value:"Multi-Factor Authentication",id:"multi-factor-authentication",level:3},{value:"Data Protection",id:"data-protection",level:2},{value:"Encryption at Rest",id:"encryption-at-rest",level:3},{value:"Encryption in Transit",id:"encryption-in-transit",level:3},{value:"Data Anonymization",id:"data-anonymization",level:3},{value:"Infrastructure Security",id:"infrastructure-security",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Container Security",id:"container-security",level:3},{value:"Network Security",id:"network-security",level:3},{value:"Security Monitoring",id:"security-monitoring",level:2},{value:"Logging Security Events",id:"logging-security-events",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Security Checklist",id:"security-checklist",level:2},{value:"Development",id:"development",level:3},{value:"Infrastructure",id:"infrastructure",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"security-best-practices",children:"Security Best Practices"})}),"\n",(0,r.jsx)(n.p,{children:"This file outlines essential security practices for protecting applications, data, and infrastructure."}),"\n",(0,r.jsx)(n.h2,{id:"application-security",children:"Application Security"}),"\n",(0,r.jsx)(n.h3,{id:"input-validation",children:"Input Validation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Always validate and sanitize user input\ndef create_user(user_data: dict):\n    # Validate required fields\n    if not user_data.get('email'):\n        raise ValueError(\"Email is required\")\n\n    # Validate email format\n    if not is_valid_email(user_data['email']):\n        raise ValueError(\"Invalid email format\")\n\n    # Sanitize input\n    clean_data = sanitize_input(user_data)\n    return User.create(clean_data)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sql-injection-prevention",children:"SQL Injection Prevention"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Good: Use parameterized queries\ndef get_user_by_id(user_id: int):\n    query = "SELECT * FROM users WHERE id = %s"\n    return db.execute(query, (user_id,))\n\n# Bad: String concatenation\ndef get_user_by_id(user_id: int):\n    query = f"SELECT * FROM users WHERE id = {user_id}"\n    return db.execute(query)  # Vulnerable to SQL injection\n'})}),"\n",(0,r.jsx)(n.h3,{id:"cross-site-scripting-xss-prevention",children:"Cross-Site Scripting (XSS) Prevention"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Escape user input in templates\nfunction renderUserName(name) {\n  return escapeHtml(name);\n}\n\n// Use Content Security Policy\napp.use((req, res, next) => {\n  res.setHeader(\n    \"Content-Security-Policy\",\n    \"default-src 'self'; script-src 'self'\"\n  );\n  next();\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"authentication-and-authorization",children:"Authentication and Authorization"}),"\n",(0,r.jsx)(n.h3,{id:"password-security",children:"Password Security"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import bcrypt\n\ndef hash_password(password: str) -> str:\n    salt = bcrypt.gensalt()\n    return bcrypt.hashpw(password.encode('utf-8'), salt)\n\ndef verify_password(password: str, hashed: str) -> bool:\n    return bcrypt.checkpw(password.encode('utf-8'), hashed)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"jwt-best-practices",children:"JWT Best Practices"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import jwt\nfrom datetime import datetime, timedelta\n\ndef create_jwt_token(user_id: int) -> str:\n    payload = {\n        'user_id': user_id,\n        'exp': datetime.utcnow() + timedelta(hours=1),\n        'iat': datetime.utcnow()\n    }\n    return jwt.encode(payload, SECRET_KEY, algorithm='HS256')\n\ndef verify_jwt_token(token: str) -> dict:\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=['HS256'])\n        return payload\n    except jwt.ExpiredSignatureError:\n        raise AuthenticationError(\"Token has expired\")\n    except jwt.InvalidTokenError:\n        raise AuthenticationError(\"Invalid token\")\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multi-factor-authentication",children:"Multi-Factor Authentication"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import pyotp\n\ndef setup_2fa(user_id: int) -> str:\n    secret = pyotp.random_base32()\n    # Store secret securely for user\n    save_user_2fa_secret(user_id, secret)\n    return secret\n\ndef verify_2fa_code(user_id: int, code: str) -> bool:\n    secret = get_user_2fa_secret(user_id)\n    totp = pyotp.TOTP(secret)\n    return totp.verify(code, valid_window=1)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"data-protection",children:"Data Protection"}),"\n",(0,r.jsx)(n.h3,{id:"encryption-at-rest",children:"Encryption at Rest"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from cryptography.fernet import Fernet\n\nclass DataEncryption:\n    def __init__(self, key: bytes):\n        self.cipher = Fernet(key)\n\n    def encrypt(self, data: str) -> bytes:\n        return self.cipher.encrypt(data.encode())\n\n    def decrypt(self, encrypted_data: bytes) -> str:\n        return self.cipher.decrypt(encrypted_data).decode()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"encryption-in-transit",children:"Encryption in Transit"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-nginx",children:"# Use HTTPS everywhere\nserver {\n    listen 443 ssl;\n    ssl_certificate /path/to/cert.pem;\n    ssl_certificate_key /path/to/key.pem;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"data-anonymization",children:"Data Anonymization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import hashlib\n\ndef anonymize_email(email: str) -> str:\n    """Convert email to irreversible hash"""\n    return hashlib.sha256(email.encode()).hexdigest()\n\ndef pseudonymize_user_id(user_id: int, salt: str) -> str:\n    """Convert user ID to reversible pseudonym"""\n    return hashlib.sha256(f"{user_id}{salt}".encode()).hexdigest()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"infrastructure-security",children:"Infrastructure Security"}),"\n",(0,r.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Never commit secrets to version control\n# Use environment variables for sensitive data\nexport DATABASE_URL="postgresql://user:pass@localhost/db"\nexport SECRET_KEY="your-secret-key"\nexport API_KEY="your-api-key"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"container-security",children:"Container Security"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dockerfile",children:"# Use non-root user\nFROM node:16-alpine\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\nUSER nextjs\n\n# Scan for vulnerabilities\nRUN npm audit --audit-level moderate\n"})}),"\n",(0,r.jsx)(n.h3,{id:"network-security",children:"Network Security"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Implement proper firewall rules\nfirewall_rules:\n  - port: 80\n    protocol: tcp\n    source: 0.0.0.0/0\n  - port: 443\n    protocol: tcp\n    source: 0.0.0.0/0\n  - port: 22\n    protocol: tcp\n    source: trusted_ips_only\n"})}),"\n",(0,r.jsx)(n.h2,{id:"security-monitoring",children:"Security Monitoring"}),"\n",(0,r.jsx)(n.h3,{id:"logging-security-events",children:"Logging Security Events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import logging\n\nsecurity_logger = logging.getLogger(\'security\')\n\ndef log_failed_login(email: str, ip_address: str):\n    security_logger.warning(f"Failed login attempt for {email} from {ip_address}")\n\ndef log_successful_login(user_id: int, ip_address: str):\n    security_logger.info(f"User {user_id} logged in from {ip_address}")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from flask_limiter import Limiter\n\nlimiter = Limiter(\n    app,\n    key_func=lambda: request.remote_addr,\n    default_limits=["1000 per hour"]\n)\n\n@app.route("/api/login", methods=["POST"])\n@limiter.limit("5 per minute")\ndef login():\n    # Login logic here\n    pass\n'})}),"\n",(0,r.jsx)(n.h2,{id:"security-checklist",children:"Security Checklist"}),"\n",(0,r.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Input validation implemented"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Output encoding/escaping"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Parameterized queries used"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Authentication mechanisms in place"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Authorization checks implemented"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Secrets management configured"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"infrastructure",children:"Infrastructure"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","HTTPS enabled everywhere"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Security headers configured"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Regular security updates"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Backup and recovery procedures"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Monitoring and alerting setup"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Incident response plan documented"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);